<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ttc-bus-delay-data-2022' inline='true' name='federated.0fyhocc1oh78ld1bonhua1fy4scp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc-bus-delay-data-2022' name='textscan.0y7gajg02uh2ef1fwl8eg1tt7nzm'>
            <connection class='textscan' directory='C:/Users/Nimesh PC/Desktop/FUTURETEK DATA ANALYSIS/assignment' filename='ttc-bus-delay-data-2022.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0y7gajg02uh2ef1fwl8eg1tt7nzm' name='ttc-bus-delay-data-2022.csv' table='[ttc-bus-delay-data-2022#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Route' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='string' name='Day' ordinal='3' />
            <column datatype='string' name='Location' ordinal='4' />
            <column datatype='string' name='Incident' ordinal='5' />
            <column datatype='integer' name='Min Delay' ordinal='6' />
            <column datatype='integer' name='Min Gap' ordinal='7' />
            <column datatype='string' name='Direction' ordinal='8' />
            <column datatype='integer' name='Vehicle' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0y7gajg02uh2ef1fwl8eg1tt7nzm' name='ttc-bus-delay-data-2022.csv' table='[ttc-bus-delay-data-2022#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Route' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='string' name='Day' ordinal='3' />
            <column datatype='string' name='Location' ordinal='4' />
            <column datatype='string' name='Incident' ordinal='5' />
            <column datatype='integer' name='Min Delay' ordinal='6' />
            <column datatype='integer' name='Min Gap' ordinal='7' />
            <column datatype='string' name='Direction' ordinal='8' />
            <column datatype='integer' name='Vehicle' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Route]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Incident</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Min Delay]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Min Delay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min Gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Min Gap]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Min Gap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Direction]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Direction</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle]</local-name>
            <parent-name>[ttc-bus-delay-data-2022.csv]</parent-name>
            <remote-alias>Vehicle</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Direction]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2022.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
      <column-instance column='[Direction]' derivation='None' name='[none:Direction:nk]' pivot='key' type='nominal' />
      <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NIMESH~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1t5ld2m003d7fj164ne5n1xdgpia.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/07/2024 08:34:28 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Route</remote-alias>
              <ordinal>1</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>134</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>2</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>2541</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day</remote-alias>
              <ordinal>3</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>4</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2819</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Incident]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident</remote-alias>
              <ordinal>5</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Min Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min Delay</remote-alias>
              <ordinal>6</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min Gap</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Min Gap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min Gap</remote-alias>
              <ordinal>7</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Direction</remote-alias>
              <ordinal>8</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vehicle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle</remote-alias>
              <ordinal>9</ordinal>
              <family>ttc-bus-delay-data-2022.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3469</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Route:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;113&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;135&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;322&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;396&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;51&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;72&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;900&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;92&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;984&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;105&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;126&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;189&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;352&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;43&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;636&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;64&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;84&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;943&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;109&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;131&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;307&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;365&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;68&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;841&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;88&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;953&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;118&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;162&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;332&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;504&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;55&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;76&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;924&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;96&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;995&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;115&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;152&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;324&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;41&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;441&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;52&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;73&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;902&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;93&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;985&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;132&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;312&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;384&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;48&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;69&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;852&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;89&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;954&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;102&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;124&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;172&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;341&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;545&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;62&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;82&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;939&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;106&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;127&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;353&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;44&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;65&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;652&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;85&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;944&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;122&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;169&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;337&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;60&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;80&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;935&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9505&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;111&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;133&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;315&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;385&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;49&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;70&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;874&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;90&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;960&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;119&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;165&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;334&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;505&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;56&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;77&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;925&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;97&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;996&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;167&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;335&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;506&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;57&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;78&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;927&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;98&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;999&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;101&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;123&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;339&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;512&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;61&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;81&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;937&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9896&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;104&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;125&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;175&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;343&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;83&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;941&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;116&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;325&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;445&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;53&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;74&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;905&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;94&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;986&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;112&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;134&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;320&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;395&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;71&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;899&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;91&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;968&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;107&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;129&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;301&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;354&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;45&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;66&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;725&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;86&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;945&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;121&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1232&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;168&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;336&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;509&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;59&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;79&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;929&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;117&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;161&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;329&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;501&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;54&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;75&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;913&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;95&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;989&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;108&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;302&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;363&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;67&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;741&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;87&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;952&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Direction:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;J&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;/&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ttc-bus-delay-data-2022.csv' id='ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C'>
            <properties context=''>
              <relation connection='textscan.0y7gajg02uh2ef1fwl8eg1tt7nzm' name='ttc-bus-delay-data-2022.csv' table='[ttc-bus-delay-data-2022#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Route' ordinal='1' />
                  <column datatype='datetime' name='Time' ordinal='2' />
                  <column datatype='string' name='Day' ordinal='3' />
                  <column datatype='string' name='Location' ordinal='4' />
                  <column datatype='string' name='Incident' ordinal='5' />
                  <column datatype='integer' name='Min Delay' ordinal='6' />
                  <column datatype='integer' name='Min Gap' ordinal='7' />
                  <column datatype='string' name='Direction' ordinal='8' />
                  <column datatype='integer' name='Vehicle' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ttc-bus-delay-data-2023' inline='true' name='federated.0bvwfcs0urnz12150sckp03uw23i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc-bus-delay-data-2023' name='textscan.0c7qovw1rmiegv1b3vmsx17702i3'>
            <connection class='textscan' directory='C:/Users/Nimesh PC/Desktop/FUTURETEK DATA ANALYSIS/assignment' filename='ttc-bus-delay-data-2023.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0c7qovw1rmiegv1b3vmsx17702i3' name='ttc-bus-delay-data-2023.csv' table='[ttc-bus-delay-data-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Route' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='string' name='Day' ordinal='3' />
            <column datatype='string' name='Location' ordinal='4' />
            <column datatype='string' name='Incident' ordinal='5' />
            <column datatype='integer' name='Min Delay' ordinal='6' />
            <column datatype='integer' name='Min Gap' ordinal='7' />
            <column datatype='string' name='Direction' ordinal='8' />
            <column datatype='integer' name='Vehicle' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0c7qovw1rmiegv1b3vmsx17702i3' name='ttc-bus-delay-data-2023.csv' table='[ttc-bus-delay-data-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Route' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='string' name='Day' ordinal='3' />
            <column datatype='string' name='Location' ordinal='4' />
            <column datatype='string' name='Incident' ordinal='5' />
            <column datatype='integer' name='Min Delay' ordinal='6' />
            <column datatype='integer' name='Min Gap' ordinal='7' />
            <column datatype='string' name='Direction' ordinal='8' />
            <column datatype='integer' name='Vehicle' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Route]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Incident</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Min Delay]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Min Delay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min Gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Min Gap]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Min Gap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Direction]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Direction</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle]</local-name>
            <parent-name>[ttc-bus-delay-data-2023.csv]</parent-name>
            <remote-alias>Vehicle</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Direction]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
      <column-instance column='[Direction]' derivation='None' name='[none:Direction:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NIMESH~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0xlqfk60hbycjh14652wj0548r3n.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/07/2024 02:18:47 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>463</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Route</remote-alias>
              <ordinal>1</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>363</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>134</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>2</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>3956</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day</remote-alias>
              <ordinal>3</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>4</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5076</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Incident]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident</remote-alias>
              <ordinal>5</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Min Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min Delay</remote-alias>
              <ordinal>6</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min Gap</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Min Gap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min Gap</remote-alias>
              <ordinal>7</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>357</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Direction</remote-alias>
              <ordinal>8</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vehicle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle</remote-alias>
              <ordinal>9</ordinal>
              <family>ttc-bus-delay-data-2023.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6268</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Direction:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;G&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;\\&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ttc-bus-delay-data-2023.csv' id='ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227'>
            <properties context=''>
              <relation connection='textscan.0c7qovw1rmiegv1b3vmsx17702i3' name='ttc-bus-delay-data-2023.csv' table='[ttc-bus-delay-data-2023#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Route' ordinal='1' />
                  <column datatype='datetime' name='Time' ordinal='2' />
                  <column datatype='string' name='Day' ordinal='3' />
                  <column datatype='string' name='Location' ordinal='4' />
                  <column datatype='string' name='Incident' ordinal='5' />
                  <column datatype='integer' name='Min Delay' ordinal='6' />
                  <column datatype='integer' name='Min Gap' ordinal='7' />
                  <column datatype='string' name='Direction' ordinal='8' />
                  <column datatype='integer' name='Vehicle' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_34E119B39A8E4D53A204E99AA74177B1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='TTC Delays 2023' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Direction' />
        <param name='target' value='TTC Delays 2023' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_AEDCB04D3A7E417485C110772CFFC7A8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='TTC Delay By Route ' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Direction' />
        <param name='target' value='TTC Delay By Route ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='TTC Delay By Location 2022 '>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2022' name='federated.0fyhocc1oh78ld1bonhua1fy4scp' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyhocc1oh78ld1bonhua1fy4scp'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2022.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2022.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]</rows>
        <cols>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{544B6433-C75F-4ECD-8470-CF6949E66BF8}' />
    </worksheet>
    <worksheet name='TTC Delay By Location 2023'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2023' name='federated.0bvwfcs0urnz12150sckp03uw23i' />
          </datasources>
          <datasource-dependencies datasource='federated.0bvwfcs0urnz12150sckp03uw23i'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2023.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='1' />
              <groupfilter function='member' level='[mn:Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bvwfcs0urnz12150sckp03uw23i].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</column>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bvwfcs0urnz12150sckp03uw23i].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]</rows>
        <cols>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{47F04C3E-B9EC-4876-806B-5E90849B6C1E}' />
    </worksheet>
    <worksheet name='TTC Delay By the Time of Day 2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2022' name='federated.0fyhocc1oh78ld1bonhua1fy4scp' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyhocc1oh78ld1bonhua1fy4scp'>
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2022.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2022.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[Time]' derivation='Hour' name='[hr:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]</rows>
        <cols>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[hr:Time:ok]</cols>
      </table>
      <simple-id uuid='{A238DFE9-15CC-41FD-B912-EB4B3AAEC28B}' />
    </worksheet>
    <worksheet name='TTC Delay By the Time of Day 2023'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2023' name='federated.0bvwfcs0urnz12150sckp03uw23i' />
          </datasources>
          <datasource-dependencies datasource='federated.0bvwfcs0urnz12150sckp03uw23i'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2023.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[Time]' derivation='Hour' name='[hr:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='1' />
              <groupfilter function='member' level='[mn:Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</column>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bvwfcs0urnz12150sckp03uw23i].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]</rows>
        <cols>[federated.0bvwfcs0urnz12150sckp03uw23i].[hr:Time:ok]</cols>
      </table>
      <simple-id uuid='{174D5BBB-6707-4CCD-ACAA-33CC254E0721}' />
    </worksheet>
    <worksheet name='TTC Delays 2022'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2022' name='federated.0fyhocc1oh78ld1bonhua1fy4scp' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyhocc1oh78ld1bonhua1fy4scp'>
            <column datatype='string' name='[Direction]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2022.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2022.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C]' role='measure' type='quantitative' />
            <column-instance column='[Direction]' derivation='None' name='[none:Direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;E&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;N&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;S&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;W&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;100&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;101&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;102&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;104&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;105&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;106&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;107&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;108&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;109&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;11&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;110&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;111&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;112&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;113&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;115&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;116&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;118&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;119&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;12&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;120&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;121&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;122&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;123&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;1232&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;124&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;125&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;126&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;127&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;129&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;13&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;130&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;131&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;132&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;133&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;134&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;135&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;14&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;15&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;152&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;16&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;160&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;161&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;162&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;165&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;167&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;168&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;169&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;17&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;171&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;172&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;175&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;189&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;19&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;20&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;21&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;22&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;23&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;24&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;25&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;26&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;27&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;28&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;29&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;30&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;300&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;301&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;302&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;307&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;31&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;312&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;315&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;320&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;322&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;324&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;325&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;329&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;33&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;332&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;334&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;335&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;336&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;337&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;339&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;34&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;341&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;343&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;35&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;352&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;353&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;354&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;363&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;365&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;37&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;38&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;384&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;385&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;39&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;395&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;396&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;40&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;41&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;42&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;43&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;44&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;441&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;45&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;46&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;47&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;48&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;49&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;50&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;501&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;504&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;505&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;506&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;509&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;51&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;510&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;512&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;52&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;53&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;54&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;545&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;55&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;56&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;57&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;59&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;60&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;600&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;61&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;62&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;63&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;64&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;65&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;652&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;66&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;67&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;68&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;69&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;70&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;71&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;72&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;725&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;73&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;74&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;741&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;75&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;76&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;77&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;78&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;79&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;80&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;81&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;82&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;83&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;84&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;841&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;85&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;852&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;86&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;87&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;874&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;88&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;89&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;899&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;9&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;90&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;900&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;902&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;905&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;91&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;913&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;92&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;924&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;925&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;927&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;929&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;93&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;935&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;937&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;939&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;94&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;941&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;943&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;944&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;945&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;95&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;9505&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;952&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;953&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;954&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;96&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;960&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;968&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;97&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;98&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;984&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;985&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;986&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;989&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;9896&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;99&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;995&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;996&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;999&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]</column>
            <column>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2022.csv_2D5D77B8FB5D458DAD4CF0CC8C316E7C:qk]</rows>
        <cols>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</cols>
      </table>
      <simple-id uuid='{00A0A731-4594-4137-8B9D-01AE3A95C959}' />
    </worksheet>
    <worksheet name='TTC Delays 2023'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc-bus-delay-data-2023' name='federated.0bvwfcs0urnz12150sckp03uw23i' />
          </datasources>
          <datasource-dependencies datasource='federated.0bvwfcs0urnz12150sckp03uw23i'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Direction]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Route]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='ttc-bus-delay-data-2023.csv' datatype='integer' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='ttc-bus-delay-data-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Direction]' derivation='None' name='[none:Direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Route]' derivation='None' name='[none:Route:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='1' />
              <groupfilter function='member' level='[mn:Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;E&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;N&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;S&quot;' />
              <groupfilter function='member' level='[none:Direction:nk]' member='&quot;W&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;100&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;101&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;102&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;104&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;105&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;106&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;107&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;108&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;109&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;11&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;110&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;111&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;112&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;113&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;115&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;116&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;118&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;119&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;12&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;120&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;121&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;122&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;123&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;124&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;125&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;126&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;127&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;128&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;129&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;13&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;130&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;131&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;132&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;133&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;134&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;135&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;14&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;15&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;16&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;160&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;161&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;162&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;165&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;167&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;168&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;169&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;17&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;171&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;176&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;189&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;19&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;20&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;200&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;202&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;203&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;21&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;22&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;23&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;232&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;24&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;25&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;26&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;28&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;29&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;30&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;300&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;301&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;302&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;304&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;306&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;307&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;31&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;312&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;32&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;320&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;322&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;324&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;325&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;329&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;33&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;332&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;334&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;335&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;336&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;337&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;339&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;34&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;341&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;343&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;35&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;352&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;353&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;354&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;36&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;363&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;365&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;37&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;38&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;384&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;385&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;39&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;395&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;396&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;40&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;41&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;42&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;43&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;44&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;45&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;46&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;468&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;47&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;48&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;49&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;50&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;501&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;504&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;506&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;51&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;510&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;52&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;53&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;54&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;55&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;555&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;56&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;57&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;59&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;60&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;600&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;61&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;62&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;63&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;64&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;65&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;66&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;67&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;68&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;69&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;70&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;701&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;71&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;72&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;73&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;74&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;75&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;76&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;77&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;78&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;79&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;80&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;81&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;82&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;83&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;84&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;85&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;86&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;87&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;88&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;89&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;899&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;9&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;90&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;900&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;902&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;905&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;91&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;92&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;924&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;925&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;927&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;929&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;93&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;935&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;937&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;938&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;939&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;94&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;941&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;943&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;944&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;945&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;95&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;952&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;953&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;954&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;96&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;960&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;968&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;97&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;98&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;984&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;985&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;986&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;989&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;99&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;995&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;996&quot;' />
              <groupfilter function='member' level='[none:Route:nk]' member='&quot;999&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bvwfcs0urnz12150sckp03uw23i].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</column>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]</column>
            <column>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bvwfcs0urnz12150sckp03uw23i].[__tableau_internal_object_id__].[cnt:ttc-bus-delay-data-2023.csv_CF7027EE454F41E3BFB29EBFCA1A2227:qk]</rows>
        <cols>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</cols>
      </table>
      <simple-id uuid='{AD24345B-0E27-47F4-AD3E-7DF0C54A89E6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='TTC Delay By Location'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='7' param='horz' type-v2='layout-flow' w='98982' x='509' y='926'>
            <zone h='98148' id='5' type-v2='layout-basic' w='88810' x='509' y='926'>
              <zone h='49074' id='3' name='TTC Delay By Location 2022 ' w='88810' x='509' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='9' name='TTC Delay By Location 2023' w='88810' x='509' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='11' is-fixed='true' type-v2='layout-basic' w='10172' x='89319' y='926'>
              <zone h='49074' id='6' param='vert' type-v2='layout-flow' w='10172' x='89319' y='926'>
                <zone h='7639' id='8' name='TTC Delay By Location 2022 ' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49074' id='12' param='vert' type-v2='layout-flow' w='10172' x='89319' y='50000'>
                <zone h='7639' id='10' name='TTC Delay By Location 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='19' param='vert' type-v2='layout-flow' w='98982' x='509' y='926'>
                <zone fixed-size='280' h='49074' id='3' is-fixed='true' name='TTC Delay By Location 2022 ' w='88810' x='509' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7639' id='8' name='TTC Delay By Location 2022 ' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='9' is-fixed='true' name='TTC Delay By Location 2023' w='88810' x='509' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7639' id='10' name='TTC Delay By Location 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{572E84E2-08EE-4C35-AA29-B3CFCD5A6270}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='TTC Delay By Route '>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='7' param='horz' type-v2='layout-flow' w='98982' x='509' y='926'>
            <zone h='98148' id='5' type-v2='layout-basic' w='88810' x='509' y='926'>
              <zone h='49074' id='3' name='TTC Delays 2022' w='88810' x='509' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='9' name='TTC Delays 2023' w='88810' x='509' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='11' is-fixed='true' type-v2='layout-basic' w='10172' x='89319' y='926'>
              <zone h='49074' id='6' param='vert' type-v2='layout-flow' w='10172' x='89319' y='926'>
                <zone fixed-size='384' h='45370' id='8' is-fixed='true' name='TTC Delays 2022' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49074' id='12' param='vert' type-v2='layout-flow' w='10172' x='89319' y='50000'>
                <zone h='12269' id='10' name='TTC Delays 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='21' param='vert' type-v2='layout-flow' w='98982' x='509' y='926'>
                <zone fixed-size='280' h='49074' id='3' is-fixed='true' name='TTC Delays 2022' w='88810' x='509' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='384' h='45370' id='8' name='TTC Delays 2022' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='9' is-fixed='true' name='TTC Delays 2023' w='88810' x='509' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12269' id='10' name='TTC Delays 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2FE5225F-590A-4621-8001-5935FB65E3A3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='TTC Delay By Time'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='7' param='horz' type-v2='layout-flow' w='98982' x='509' y='926'>
            <zone h='98148' id='5' type-v2='layout-basic' w='88810' x='509' y='926'>
              <zone h='49074' id='3' name='TTC Delay By the Time of Day 2022' w='88810' x='509' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='9' name='TTC Delay By the Time of Day 2023' w='88810' x='509' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='13' is-fixed='true' type-v2='layout-basic' w='10172' x='89319' y='926'>
              <zone h='49074' id='6' param='vert' type-v2='layout-flow' w='10172' x='89319' y='926'>
                <zone fixed-size='388' h='45833' id='8' is-fixed='true' name='TTC Delay By the Time of Day 2022' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49074' id='14' param='vert' type-v2='layout-flow' w='10172' x='89319' y='50000'>
                <zone h='7639' id='10' name='TTC Delay By the Time of Day 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='21' param='vert' type-v2='layout-flow' w='98982' x='509' y='926'>
                <zone fixed-size='280' h='49074' id='3' is-fixed='true' name='TTC Delay By the Time of Day 2022' w='88810' x='509' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='388' h='45833' id='8' name='TTC Delay By the Time of Day 2022' pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='9' is-fixed='true' name='TTC Delay By the Time of Day 2023' w='88810' x='509' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7639' id='10' name='TTC Delay By the Time of Day 2023' pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type-v2='color' w='10172' x='89319' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7234EF0F-C295-4467-81E5-55139B4CB3BB}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='TTC Delays 2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{766ADD78-2BA5-4AE5-9895-CBF3C0BE523F}' />
    </window>
    <window class='worksheet' maximized='true' name='TTC Delays 2023'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</field>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D91F870C-8C60-4738-844D-5F80976A30EB}' />
    </window>
    <window class='dashboard' name='TTC Delay By Route '>
      <viewpoints>
        <viewpoint name='TTC Delays 2022'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Direction:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TTC Delays 2023'>
          <zoom type='entire-view' />
          <highlight field='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Direction:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1A6D05F6-3476-40CE-9961-C85159971C48}' />
    </window>
    <window class='worksheet' name='TTC Delay By the Time of Day 2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[hr:Time:ok]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B58CE313-1E11-4413-9CB7-C9147CA856C8}' />
    </window>
    <window class='worksheet' name='TTC Delay By the Time of Day 2023'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[hr:Time:ok]</field>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</field>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{345352F4-A9B0-44F1-8B01-FFF3DBE22F2B}' />
    </window>
    <window class='dashboard' name='TTC Delay By Time'>
      <viewpoints>
        <viewpoint name='TTC Delay By the Time of Day 2022'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TTC Delay By the Time of Day 2023'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9140E0F4-32C7-48B8-968B-022C789E3B91}' />
    </window>
    <window class='worksheet' name='TTC Delay By Location 2022 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Location:nk]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19849A26-88B2-49DF-909A-F013A926BC2C}' />
    </window>
    <window class='worksheet' name='TTC Delay By Location 2023'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[mn:Date:ok]</field>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Location:nk]</field>
            <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Location:nk]</field>
            <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84CDEA69-72A7-4337-903C-D0FF5F8BFB50}' />
    </window>
    <window class='dashboard' name='TTC Delay By Location'>
      <viewpoints>
        <viewpoint name='TTC Delay By Location 2022 '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fyhocc1oh78ld1bonhua1fy4scp].[none:Route:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TTC Delay By Location 2023'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0bvwfcs0urnz12150sckp03uw23i].[none:Route:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{126CD320-A4B1-4FE6-8766-B2BC254D27CD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='TTC Delay By Location' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9x5MlV37v90l3vfeuqrqrvYEZoAEM+N6jRCrEEKW3ejILShH6LxSh0B8g
      hVbaKqSNdlpJISkYfAwG+YYcvjHowcB1N9qWr+u9TZ9aZN68Vd1VA2BQaMwA97vp6rwnT548
      5/z873dScBzHYY01fqQQv+8BrLHG94k1Aazxo8aaANb4UWNNAGv8qLEmgDV+1JCXfziOw+MH
      n9LsDChUa5iTMb3xhM3ta+RjEk92jynXLrFRzvLJ/V9iOhKbV29TzMT9zh4++oI7t98492HH
      L55yNBijBCK88+btU7+N2wcY0QrZqHzO3SfajkYkkkmGvQ6RdJ7AOWRsmyqffPI5lhDk3Xfe
      4OFnH0Mwyd3rm+51Mcg7b97gs0/dv++98xai8JWPX+MHBH/rCILArTfeJhwOcufGdd56912C
      4TBXtqp8/Plj3n/vHhvlHADD6YJ7773Pg99+hLEY8etf/5r94zbj8RjH0fnk/n0+ffiE/Rcv
      MBzY3d0FoL53zM1791C7LQ6PdhmqFgd7u1iOSwC9mQk4vHjykI8++g2qafPk4Wd89vAJ7eN9
      fnP/I5q9Pn/9f/8/fPHlM+ZzDVGw+fyT+/z280eYsx4//+V9fv3xZziAbTnc/cl7xKwej7/8
      HJLbyNMmrYnF3Z+8R9Ts0RiZ7t9Gj9bU+j7WYI3vEV9LBRJE6dVrgoAki/zy5z8HSeJXv/61
      +4PtYDkOn33+GbmkxP1Pn3BweOz+5uh8ev8jujONfDbDp/d/y+7+IdIJrmubKs3+nHfeuMpv
      fvkz+vMgb925gWWZAHz2xWMuX7vGG7euUT86onf4ACFzjXJwzpP9BsHcFqI+RwekQIiH93+O
      Gq2RZE4ynSKVCLCwZB7e/zlarEYtG+XB/Z+jxTcox199zzV+2PhKAhAESITgo/u/4bDRBWDY
      bXL//keE4llqm5s4lsNbb7qqz6yzT2NkIMsy0ewWvcc/p3L9rRP9iciOhi4lEGb7xPKXvF8c
      Hn3+Cfv1Htqky/2PP6G4eYNZb5/PHj3l2fMXSJKEKIrI6Hz25TMAIukyR09+y6P9HoVEEFEQ
      AJeihocP+PxghKNNiVWu8uijf8fnexOis6d8cTDCUaccPfuUBwcjHHXCTDMvbmbX+KOA8F1G
      ghfjPj/79Wf85X/8Z6/8ZmlT/u3f/4K/+Mu/QFnr3Wt8T/hOCWCNNf7QsXaDrvGjxpoA1vhR
      Y00Aa/yosSaANX4Q+OLRwzOvTzsHzMZDdNM+8/evDruuscYfAcbjMS8+/5iHhw1A5tqlCn/7
      N3/H9StlMtkCI0NG100Ee4oczvCf/PmfAmsCWOMHgqgsQCRBPueQS0WxHXjvww/Z2CijaQY5
      QWSimmRT0VP3XYgb1HEcBGHtzF/jjw+/0wYYd7poX6MT2z5bv1pjjT90rI3gNX7UOJMA+vvP
      +eu//VuePz34WhIAx8Z49P9e7MjWWOM14EwCiKaTXL16k3rjCOVrdmSP6xc4rDXWeD040ws0
      bjdojWWkgMzatF3jh4wzJUBu+zbytEVx69LXlgBrrPHHiDMJoP30CwYGtJ7tM3ndI1pjjdeI
      MwmgcPUW//KDt4klU0Re94jWWOM14kwCEOQQ836Lkaau/aRr/KBx7v6eaRazXpt1mfgaP2Sc
      SQCOo/PbX31KNJlgXS62xg8ZZ6tAQoB37t0hFI2vs+XW+EHjfBVfVujVj30VyHFs9vf2ME2d
      43oLbT6m0x+9nlGuscZ3hDMZ/HzU4+HD58RSKxXI0jXCQYEHj/fJR2V2WgtCOGRTcWzbxnZs
      THN9rMgaf1w4kwAiySzv/eQ2D541/AamOubZQZdKPk2rPyaeCjPRHERRxBFFREFEltcK0xp/
      XDh3x5Y3Kxh2ym8QShb5Fx8UAbj8Oka2xhqvAefaAO2jFr++/48cNDqvczxrrPFacS4BTEYD
      KltXiUeDr3M8a6zxWnEuAYwWUx784jdEEonXOZ411nitOJMAZsMOs4XA1Teur1Mh1vhB4+yC
      mFSeSj6CrYnrVIg1ftA4OxXCtgkEw0y02boeYI0fNM4kAHU24he/+hxRn6K+7hGtscZrxJkE
      EI6n+dd/+adEC1WiZzVYY40fCM61ccczCxYjjNc5mjXWeM04lwBMbU4snX2dY1ljjdeOcwkg
      FI7QPjxcS4A1ftA4PxDWOaatW4Rf52jWWOM140wCmI96fPTFC9Kiw+J1j2iNNV4jzk2H/qv/
      +t9wfLjwT4VwHIfhaEQqHqHeGpBLhRmrDvlM8jUOd401LhbnpkM//nIHQXNYbGYJA46pMxhN
      mY1HCJb9akHM6BDj4COEyjuvcfhrrPHtcC4B5NNJdo77LHNBbduiVT+kUMgzGs5eKYhxxsc0
      Hv6cUV/h7q2rCMH4a3qFNdb4/XEmATiOzt/97b8jU6phAgFADkb48MMPf2dnrf6Uxx//r3zy
      6U+59x/+Z9y+lP8OhrzGGheHc71AkiRhqBrrT1+s8UPGmRLA0Gz+7D/9S/LZzO/dsfHg/8KK
      /RlS7vrv3ccaa3zXOFMCaOMef/M3/5Z/+qdf/d6BMHt8zN//8otvMbQ11vjucSYBxAtVfvr2
      beaz6bc6Ge4fPt79FnevscZ3j3NtgGgsSiSeQPqWD/j7NRGs8QeMcwkgGE3z9o3tb10R9g+/
      XRPAGn+4OPdw3F/87Gfcf/j0W0uANdb4Q8aZXiBBCFCpFjDFIDasiWCNHyzOVYHCAZHPP390
      IUXx6s/+pwvoZY01Lh7nEkC+skkxl7qQr0TanSf8D//bP1xAT2uscbE4vyLM0EkW8hd4KoSD
      1XlyYb2tscZF4PyjEccT9On83EDYoNtk76jx9Z9kW2j/+D+viWCNPyicaQS3n31BYvtNNq0H
      5wbCpqqJ5HzDMJljof3sf+TTnR7/WP3veD83Rus8J3fvvyCXjJC3jogEFRwcDq0yl8upb/g6
      a6zxzXAmAeQuXeUXv/oFcjhB6NwbLcba758qN13otFsN5ofP+PfqYwD+zeh/4dZWDtOy+N8n
      /y2y4PBfRv6BB8W/4m5W44ZyiD2uIyYqANjTFscb/xVbUgNHkDgwC8xUg2jIVdyWf5cyMSKh
      9RFfa7yKMwlAVML8y3/1r37njeXaFmVwi2FsGzLXydspsA26mTwRxeRPzQmHqQREr7GpJCHu
      JsbFtBGbiQQ5uYDqbGNm3AN4I7HbkEki2DabkQQyNtbYZjRb0NAabAcfYXUeI+VvAmD3X/B3
      rXf5b8J/jSWG+LvZn7PbGPqS4+TfR+0x//3lXwPgWDqmFOb/nP05Uuchf3WpDnCq7//j8Bpi
      5jK6YRJTHP7z2D/z/5l/QSEdpST1uKYc4YzrCB4xOtMu/yz/RximjSK7mmV7MKOQjr7y92Ci
      ko67rEU3LQKy62iWxgf8SWHANFjlWNzyCVnVTW5EeuzrObYCXSxHpD4PkAyLDGy37iJmtMh6
      BdyOsUBQwji2iSC6S+xoE79G4+Tfe4skguLeaFo2suS6Pc5iJACabhEMyOe2faW9YXE93MWx
      DARJwXAkWnOZWlTzx9KUL6E7MpphEVTc8Rqm5c/jsr+kOCNpNFZjV1NcCg3d9RQj1K3sK2PR
      DZtr4Q66adOgjIJF2dr1+xAc55vqMa/Csr7aWWrbNqL49Y/a/SbtL6Jv27IQJOlMr9dX9e84
      DoIgfO2xfJftX9dYHNtif2+PUDROMp0hHHiVl36bsZz8+9u098d7zu8XcvizJEnYhkaj0eDF
      sxc4koQkiQx7HRr1YxqtHoqiIAg6vW6PXrdHvz9DkiTm0zHHR7s8fX6EJElIkkSnWafTaTGc
      zP1rkiRhajp4fbdbHf+6oijgaHR701Ptp6MB7XabVqfvXRPYe/GcyVw91U6SJPT5wutbQhQF
      2s0jDuvuM2RJoNVocLi3y3hhIEmS/x69bg9ZlpEkgV63x6A/oNd1n6dNhgyHA57tHiKceJYs
      y+iajiRJCM5qTkZjd1yzyYhGo8H+Yd1rL9HvtqkfH9Hpj5AkiWGrjfXSO4wHXVrtNu3uwLsG
      jaM9nr84wLTddZJEkVG/w87OAYIkIcsC7VbPn0d3nhfuWr7Y9efEX7de36sVGbPQbXae7xFQ
      ZHcO1Tn1RhtRFL1xi7QadXq9DpO55o9TnU14/uwFpsOp8Ru6cWqOcCxMy3F/0+Y0Gg12Xuz5
      e2DQa/PkyTPmqoEsy9iGyrOnT2n3J34//V4PUbDoDybeuL1+dtx+Luz0c8dx0HWDZC7v61WW
      ZWKYNoVCbtmKXrdDp9vFtOzljTiOw0oOOXQ7PURRot1snfc0mseH7Ozs0BtOvG40Xjx7zs7O
      DnPV8K7ZzOdzTrJ1ORBGwWAwngKgzUbs7O1x1On7k1E/2GMyGzOZaP59hqEjhmKkYq7qos6n
      dLodhpOp32Y8HNDpdlho7vNNQ+eg0SUWEM8vLHLs1ZzYbivbsjAMg3xhVVFnmSamDfmce1jZ
      bNznxc4Ou3uHft+tVgdJFOm0294VAWwTTbf8KRj1WrQGIwbDsXfNoX64z87ODoPR1J83wzDI
      5PN+FsBiNqHT7TCezgAIxTKk42E2NqtIS87u2Bj6gla7541JIBiQOT5uE/BUG1OfsXtwTK/f
      R/oKDn96mhwMwyB9YkyiCPOZyrIby9SRA0H67Ra66Woltqmxv38IknTmu10YAQhYtJtNDg6O
      /AWZTca0mg3/c6qCECSZTGLqcwIRt9pYEEWUQJRcPuH3VKlVWCxUahs1t59BhydPn7Bz0PTb
      ZItFTF1lOpn41152WY0mC2RJxljM/TbaYspUNRn3+wD0G2167Q6T0dA/CDiRTBGQwxjm3O9r
      0OtyfHDAXHO/hJlIxAgEFMKRmNfCYTwaEw6HiSdc/XIx08nEwli2w8vfz2w0XBeyICmIoogg
      iMQ84ppPx/R6PXonPkM7HQ9pNur0huPl415BqVRANSyqlRIAtqkTTlW4sZ33mUIoEiMWCuFY
      hhflF8mXihjqnMnUfV9DW1BvNGkcN/xxp9MpIiGFheGurj4foTpBUmFoDdz7BFFEUSTareVn
      tWwmM52337xBt+POtygFSKeSlApZZt5cjod9Pv7Nx8w13X2+OuXhF5/z8NETFoa3kS2DZrPJ
      0VHd218Olq3w7rt3mM/cw3sCwTDYFsGAiOXNTzgcYT6dohvus3R1Qa/X4/Gjx5hcIAFMOi0u
      v3WPTFj2J021BD744D3G/a4/IfXDQ0LxrG+oOI5Dr93guLHkWg6tTp9LWxscHR4CoC10QrEg
      ju34nEwWbNKFCkFP9xTFELfu3GBzc5Og4lJ7NBzEtm0sZ8VpMvkCiYiCpLgEmKuVSWcy3Hnr
      Tf8ImMloQGcwYXPDNXAtUyWaKvPmzSpdb7EVJYgsKUTCy2MDBArlKpubm2RSLgFEkjH3+Zbt
      T/Rk2OP+Rx8RirvGuWMZCGIA27J9Tmo7DplcgaCyvMvBIMAH7/2EYc/dSKlCie3NTTZqZX9O
      ms02w/oBE9Px5kSi125wdNxC9jiwtphxVG9R3dr0xiQgYpKrbBDy5nLUG1EoplD11QYZDXv0
      RgsqJVcqBcIJJHNCa2xSSC2tb16S5hLhkMT+QZ10Nu2OSVKo1mps1CrI3sAFQSAUDq3sBctE
      FF0VxvI4+ajb4/Y77xORHV+6zCYD9vcPfO5u6hqqYWObGqpHXKNBD1sOk467qxsIhclms9y8
      fROZCySAZOUS46PnCOHV1+WL2SQPv3xKbXPTe1GFu2/ewTF1lrb3dDxAiabZqBS9uwQSYYl/
      +udfUKy6EkAJiMznNpa58KXLcDjmYOc5gZD7Yrat0m032H2xy/6+S3DhSJhwJMzElxLgWBah
      WIpa1X1e96iBELB58mjX7zuVyZHLpHwuK0oKAclmqMpsllxJZTs2wVAQ216utkAkrNBpNXjy
      bB8AfTZlrs+YLGw/ot5otnn73XcZdpcED5FYgquXCvSHLidLpTOMBx2Gk5XkyqWjfPl0l43N
      KgCjbp+DF7vsvtj1JdfNO3d5+4MPuVT0znQVRKLRMOPx2HdURBNJSoU8AsvFd5gvNPYePkSM
      uHOZr1WJhpPUKquS2NrWFcq5BPP56sD8aFgG4cQ35AQBUZQJKKI3dTaj4ZhuvYEpLo1Vm6OD
      fY5bfUIeEzzY2yMcDqPprpQKRlNcvXaVK1evkk0ux7RBc+cJwXjaV4GisRjz2Yq7y4EgQVlA
      kIKEgrK/lplkzF9bxxEIBALoC3cvXRgBzEcjspUa+ewqeKWbsLW5geK5yxxb5/nzfXqeIQWu
      2ArKArPZcrEdxguLP/2Xf0Lr+AgAJRBEEkWUYMAfcDweJ5FMIkvuFUmOk0zGicaDxJOeW8/Q
      mWsGb755xx+TY6o8fPiYiSc2M6Ucli4Ria48QIdHdbYuXaLTctUUy5hRb/TQFjNfvx/1u+zv
      7zOZr87O09QFc1WnUHRtnkA0RjKRJJUI+xpLJhXnyZdfEoq5hCQFotjmjGZ3Qi7jukkdB5Kp
      zIm5dDAtkc2NGrK3kdLFDLPFjIVuEfBajYc9PvvtfT7/8rk33ybHh0fE0nnfS9M5OiBV2WA+
      7HlRfoHNzRqRZALH8DZgKEJQEZl6+j7A0f4u48mI6dxtY+hzRlOLUMCVWO7zLHTddVS4oxS5
      fPkSiWza71ufDdAJkQzadAbeGuRLbG9vU/DeV5+PeL5Xp3O8R2/sEtxsPKVY2/ClKzi0G3Vs
      KUzK4+6mrqGZDo61kgDj6QTHlohHXPWyU28xn86ZjscYXKQK1O3Q6HTodHr+Yh8d7NPpdJgu
      uYYgkcmm2ajkGU9dA3M6mSLJEpMTxmQ0IPB874gr1664L2aaDHo9otGY3yYWjxGLhqnXXzKU
      HVflAFclmLVb1AcrXTqVKxBVRDSPIy6mMxxJQp1OfNVta6PEJ598TjpXAEBSolTKWUTHRvN0
      0ngyTa1aJSCtpnAynSIKMB65Esc2NKZzg8lo6HOgeCqLZVoU8xlvuBaxRIZ8No1huiOoN1ou
      ATaXqSY2h/sHdDodZgt33iRJJplMEo2sQpXjQZ9wMketVPCmW2Zjy40nLNcklS8ybtdRoglP
      UlscHjaRlSDDlis5R70m7cGIwWDsM4VYPE6uUCUachmXpc/pj2ZYpo5lLwnAxHIERMdE1U3A
      4smTZ0ymMxTJ0wtEGUuboQoRihl3484mQz75+GNaS1tRUgiKNoYj+2rgoNOi2enQ6w28dxEo
      VmpkkjFf5QpEk9y5dZ2NWg08h0JAltH1BTNvD6ayUdrdLuFkigAXSACFy1coJ+MY5ip76O6b
      b4Jh4Hi6rSBIVGo1NjZrLNXbVCqJKEqk0yvJEYklmQ67dHtDAKLpPFvlHK1W219ITVVZqBqF
      oquTOo7FoN9nOFoQT7gSoFItky6XsE9w6f3dXQadLo63ILYtsbW1wRtvvemrKftHbTJhGUFR
      /HGDdcoLtJhNaLXbvkQACCgKoiQSCLo8WQkEXMkVWEkuQ9dIJBKoqub1LdA+es5nX+75NkCp
      kObj+/eJJJfH00u88dYdl4t6EsDQVTrdLqph+ps0GI6iiDCdu9LUNg0CwRCxeNq3i+aTMZrl
      MBkMPCNYIptNEk/GKW+UAQhF4sQjURKxkJ8OrwSCHB4eEou5m1YJxbl8+ZLPtQEWkxlIIppm
      EvAkTjQaI5PJInnjtk2d8WTOYjZF0z2HQjJJOp3xpbljGWi2iCKYaJ7RXbtyjVw8jGEs2ZSN
      KCmEQlHiUXdNbMug3WrRH05QvPdNJpMEQwGUgLsmo/6EfD7JZOoSxLknw31TaPMRjc6AyWji
      L/bR4T6jzoBo1bUBHMfhYH8XURDIVbYA13WXyGRptTtUyy7nQgBFkrA8Kp4Ne6iORK26MviU
      gMKg0SGbdxfNsQ0QAtim5m8ky3RF8mwxY6PqekaSqTThWIKotyDqfEJrb0FIkNm8vIkEJBNR
      JrMF6ngEqTgODqZpYZsT5qprwJc2LlOqXeLRl4/9OXAch8V8QTThbtx+a4AgCGzcuOrPiW3b
      jIc9xqpJNp3Etgxy1atsh2G20AkqYSKxBOl0GklYkrvD4cEBo96Q1MYl/3m5QpGgEvD/P51M
      kEJhpp40dWyTdrOBqEQJhTYIKBLRZJqZ2YdQyJtLG9MCURCZT6bEIiHfVZgrlfwNEo0nuXH9
      OuGoq6aJkkLn+BFjI8A7b7sqZra6Sdq2EQTR77vd6pAvFzA8YzacyPPuO6cPTNMWC9TFFJUg
      hUwKQVKIhhREcSUBZuMe3eGEyUj33bf9bgfdgkAoSCwSQhBEIt74wp4NsH9Q5+q1TV7sHnPt
      6gab12+cevaFEYA+N7ly8zoB08TBdb1H4xmuXr+F6akbjj2j31tQLIVo1Ptsb+Uob7jEsX15
      9TGmbqfL1pWr6Ia7AaKpNJNFE/FE4MI0Lc9z4P5flELE40Fa7ZMnWTgEQyGCkdUxjcN+n3A8
      yUJViYSDVK5eJ7OYIylB37gaDUdMZguUoM7WZg1BkCiUStiWhu6F2jv1PV4c99na2vKfZVlg
      mTbBgCs5CltV+sMxk1aHUDGPCEyGfcKJLFnvzCVBlOh3DhhLAvnqZQAaxw2i8fgJA9shnsxz
      /eZtfy7j6TzT+T7NdpeS5/YMRRMUS0U/4ip6LlbLVDFtmwASjuMS80l/+mjYRzctYvGMd59M
      OBzGMgzfUHzx5Ety5Sr7j59x+9Z1bFOntHWTbcVioZoEYhLd+iFz02Y4Vrlz9wYSEjfv3CaZ
      Wn1r2rYMDnaeMzUCXLt+iaAsUd3c4vhwH4KeDHYsJpMJsugQTbtM0TQErly7gWguJYBIdXMT
      QZAIh1eG+HzQZmxH2PYIIRZR+PyLJ1Q23Lndf/IlqhIkJAfZ2KxenAqkzafs7Oywd3Dsb8BW
      /YCd3V3fmyGIYYrFJIbmkPLyYhqHhzx5/ISd3QO/r0wqxq9+/bHvuuvu7RDMllj0e57Hw+Fw
      74BwOORzFj+gdmL7LwND3fbK45LJpGg16yw8I2nQOKA5mvPs0Zd+6nepXKRYqXDn7m2/7/ls
      xvSEP7k/1ijGgoiB1eTniyXuvnGXeNRVwQRsFprBQtNWhItCUBaZjlz1DkEkFokwmsx9Z0E2
      n6XTahEMR/y+G0f77OzuMp65MzAZdGh0x1TKRV8qDrot9vb2qHu6vG0ZiJLrYpV9opAIhYI0
      j478OEA6nUBdGGSW6oxtoeom6olxJ1Ip1MWCZDLpDVui26pzXG8he7lMkXgM3RapFDP+mGbT
      Ee12k/5oZePJSoBAQF45HXafc9To+Ma0KMooiowkyyjSUnUbsbOzw+Fx01thi+ePH/PwwZe+
      jamrUyaaQ0Cyfbskmy8QjURQvL0UiafYvrRFyGNSF0YAkViYWEBhOJ75Bl+mUMI6FaxyPTNC
      IEra09Ov377NvffuUcgtXW4C2WKFK7UyhmfMRrM5Dr78gqFqeCJL4Nqt21SKeUQ/10THcgK8
      cWuLXt8luBu371AqlXjrpBdIEIhE48Rj7vOVUAwFk1h8xaVkScIyNJ48feH2bWloukq/M8AR
      3CmrVUqE01lkZ6klOzz98hE7Ozv0vei062JVmHS6vqsyEg64sQF/+V2iPZmSNR2PsB2HwXDo
      z0muWMTQ5kwnrmdmPlHJpVNoizm61yqeyiA6FrOpu9kEUULXNYIKTL1A2GI6Znd/D1sInIio
      SoTCQd8P36k3EBSZcbvDMhYeCgZpHh/SH6/6jkbCjKcLPylOlBTM2YBnO0e+ofpyJNhQp4iR
      DJVsmJEXaU+kM9SqFd/DpS0mTGYaoqQsXfxE4lHCssR4OvP6VqhUy2RzSUSvkaHOGU4WWIbO
      Unj2uz3iiYSvFsuyzW/u/4p2b4rIBRJAOBFnrtpsVVeiVREdUoUK0ciKS4bCEebjHkPPCJlN
      RjSbTXTL99Sy+/w5g04X23uxcCxBJhUnEouugj5Hu/z8H35BIOl6hkQpDPaC3YMOhbyr8jQO
      9zmu13m+s+8/X5Zl5rOFTziBUJDZoMtho70yJiNxLl26zJ2bV72+FdSFRiQWIRJ138XQNSzb
      RtOW20+kurVJQFolB5avXuNSuXSKS4fDbmxi6m0kUVSobmxy99Ylul2XcDK5PLFolHBoFWST
      MMmVNoiEXZ0/mnCDbA6Cr8cGFRExFPONwiUnFSUZxePSyVyJD9//gGIu7jEqi90XB4TDQd/A
      zFUqSJZJMB7z+x4Ne0RTeaqlpf7+KuHq8yk6AbYvb/g2wMuR4EA4gTEf0h3NSXvuallWUAIB
      /30lOcjl7W22ty8TWnLuWBTdlqgUltLFotOfsFnNc3jY9PZJilQ8RDgSYRnEsUyDwxc7WB4B
      pAtVPnjvA/KZ6MXGARAVYiGJXm/gS4BgKMR0NHBD1ACOxcHuDvXujLTnTRkN+szmAwaDJY8U
      yORyZKoVAp4RvBgPsaUQsXDIb1Oq1Lj15lX6TXdibWvObDJhvpjSbLvpAoYXXbVPZKsGQhFq
      1YJvYBvqnIUlcuXKlj8ZncaRSzieWmZbBqlUmngijTF3uVar/XLeDczHA2w5zMLzwujqnGaz
      yUw3fKYgSK4KtNTbHdvg4Rdf8PjJPpmcS7idVptgOHyCAFzGMR4OCATdOYilkoRCQaKxE5t0
      vECbTpl4btiTgTDbe199MWH/qIFmmH4kuLKxxfb2NmmPmZyVC5RIZZEdlf7QI1wpQG1jk1vX
      avQG7rXZVCMZDaPOZ546+Wok2HFssEwOD4+Za8uYgsdMloGwSAJzMaLRbPkuTlGSEWzjRFRf
      olbJcdwecWXbDZiq8zGaZfP86a7P4Eq1TZLZNIL3/upsQr3eZDJ1bcXvMBlOIJMrYOomyXjU
      W48A9376IW/fvuy7DwvlKuFAmGh06c1YpUI06nWvb4vFYsHB4bE3YJtWu8doqrIYLXNMIqRz
      ee7cuk0+5y5kOp1EW0yZ66bf9+HBEaFQiFbDjR8ooQjpZIxWc7WRDdMlHMcyvROTp9oAACAA
      SURBVLteTVirVMqYpunn/YBDIp0nJEu+frkYDxlO54xPxDiODw9BCtDvuvkyhjZFEkAOhuh4
      hJtIpVAkiePjuneXQLaQw9RtEp7q1tzdJZIrMu11fRUoEhIRAgGyBTfKfWYg7NhTbzpdT72R
      iIQk6vW6H+MQJZlQKEjj8Gh1KshLaQ62pfPgiwc8e3FMOu3OdzgaQjd0N4PTW6eXI8G2ZdAb
      zbh67Sohz1XZbp+21dRJj4WtEJVNWv2ZP27LmnPU6PsDWixUpsMuzc7Aff9kjmQkyMZWFclz
      qS7UBeVqDcnxMoi+s2Q4UWQ+GTAYDP1kpb2dHeLJOGMvycpxLBrH+7Q6Y5YpmjsvdihWt7CM
      ZdRRYKtW5uCo4QfCIqk8hXSMVCrp65b5fIZsNkupWvEnRNNUGs0mgtf3ZDSg1ZtQK6/SLArZ
      BEeNNlUv0c4V4adFeTqdQp1PmWvu8stylFw+SzqTIZ/zUiFsL2MzX/DvGw37p7JBz4oDXLly
      mcl4RHXzktsmGCedy5NJpygVXQPT0HXmiwX5/FLdsNl9sU88GfEj2PFsht1HXzDRbZ9LxxMp
      tOmArpcwJylh3v/wQ65tbxHwNtur6o1Fs92nXMyyv+fmXi2mI9dOEFeeMUmWiMTTZL3Nrs3H
      yIKbftDruQQ+7o/BduMPLut4NRIsSgrlUgHHtnx3RblSwTQNYnGXmcihCP36Hg8e76IE3RHk
      a1Vi0TSVYtpf75cjwdpkgCFGiQcsuiNXozja3+HJ4yfUG13v+TKhUID60TEWF0gA006D7KVb
      yPrCj6h2223m87nvOQEQRIvF3PDdl1evbnN8cEB187LfZjweo8gCk8mSKGx0wyKdSftiW1NV
      bNtNtwawzSmDgYokWjSaLkcob1xmo5xhOl1ldc4XKrZlMV+4GykYiVHI5blz99YqYc1LhqtW
      PBecPmE0tcnEBA4brmEqywGCisTR8TJaK5BMJNAWcwJhl0tHUjk2ygW2r1w+0fcQSVGYTMb+
      faq6QNdUlpOSzhXY3t6mXFymkdt0Wh3m87nv9YokkqSTcSLR8Alz2g3G2Z49ZRkqT548ZffF
      U8bzZYq4l1acW6o3AhI6n33xJQkvGJnMlV07IbvKoQkEFKaTCXMvgBeMJEnncmQyaQqexC1s
      lAlHw8RTKS8949VIsDoZMJ3OcKQoQc8ucdO/TfIFd75FUSadzbB55ToZT1UOhaMEFeFEeobI
      3Z/c4+6t68S8aLgSTiBbU6ZWyE/QK5erbF7a5vo11109nwzZO9gDIXixEiCazjHrtZDiCT83
      pVQuEYpEEH3uKhCNF3n7zUuYXr7qckOMR8t0hVfrAV51g9p0/DauASTKEQr5OIYByZTnYj3Y
      YzKbMPbz+gVqW5cIByMUvI/7neUGLW9eplbKMJ0uvL5DLMZtHr9okvYmdtjvsHewS/DEp6D6
      /R7ZQslXgfr1fVrjBc++/NJnCi1f3C9VoDGjsY7g6LTaq5SN05AolQuEIhEEby5nwwEorl20
      KqVwyJa3uHnVja3Ylo4oKCiKguZt3FfdoAKFYpFoJOJ7arT5lKOjIw6PGn7fvW6PaDxOxLNL
      BEFgoapo2oLlNhIEAVmWaR3X/YzNVDp9KhIciqdJJOJIjurn7MuKQkAWOK57zEQQCIcjjLst
      Zp73atht0BmOGQ4nHsEb/OZX99nZ2WE4dolCnQ1ot3tMpwufUUiSxLjf5Ljtqk6hSJxbt968
      eCO4e3SMho1jWr7eOBiM2Hv2zE8pwDHYeb7LwcEe05mrufq++k7H76tUKWEaBvGkq26kKjWO
      H3/GQgx4xCVQrpQwTrTBEdyilUDUr7etbG1z/fpdbt+oeT07DHo94smor0oooSjD5gGmsIoJ
      vlwQI4gKxWKeaDTih+url67y/r0PiEZOpFpnMkiisEqFCMeQHeOUi7VcqaDOJyC5cyIH4+Qy
      UUxLJJFc+f1Pw2Y4nLD79Bmit0kdx0JdzDk4bJyIMlssZmMaXhxAUsJEIjKdTo+AF2R61Q3q
      0B+MiScSfqxgmTJdrtV86aLrOupiQbfbc9vMhkxnBpgqnb6X+2QZ7L54hhCOgud4SKbT5PI5
      HO//pwjHcykPuh12dnaIxlwJZJs6ezs79GcGMS9jNJWvcPPaDTaLaT+Jr1TdYHNz05cAoVia
      UrlEWDLRPM0gGI7iIBHzYjPhWJxpr8GBF0+4QAmQJhGJEIksRbJArVahXKv5E4sgk8+lGA6n
      KAH3WrlawTRNX/8Dt/rpZCXZpF0nf/k2kj73Oallmpgnq80Er/hh1GO0DBaN+uzvPufBkx2W
      jVRVxbZMn/uokyHl7duERdvndvlyjevX3+DWdTf12LF1JjONeCzmb4jJaMDT5zuI4urkVFkJ
      uKV53mIHQiGmfdfFusRk2KczmK3SPnCrzeRQjGT0RGrxKUhUa0UqGzUk73nxTJFsMkYqlVgF
      Hl+qCDvLCH7VDQq6rnH8YgfdW6dVyrTjb5BgMIDo2TMAgUiSdDKM5UjElx69bpcbb3+ArE3Q
      HQGw2H3+3NXB6y6DU6cDpnMTx1Dpet6jzSvX+elPPyQguSOSg1E++PBDbm5X0Lx1WszG1BsN
      ZrrpG9iL+YTdF7vsvjg8NZfBWNInnFb9kEGn69cMLKYTIukyt65eAi6QABK5AqhzJn6gwqHZ
      6Z0qbAGb+tER4WRuVRDjG5Or/JBAMIjoGDRaLrdJFiscPPotM2RfvVq2aXptHMfkYHeHRn9O
      yvODv2oE23Q7fURJpO15gdKlMrNeEyWe9Pt++vABOzs7tLoD74qDpqrs7OwhehJAFETmszmi
      uJIAiiwyGY99m8dQZ6i2xNXtlYu1srVNtZhi6hGpgOvinA7dutmzYdPujtjaKHN0eAzAsN3B
      diRSyZjPFCrV8iljUlLC3L17C0vXWJK3tpjx7PETTGE5ItdQjWfTiJ6Hq3P4cso09Lp9LMsi
      FFwRqWnoBCIJ4hF35rKlEqN2nWiuSEQWAZlSuUQ0rBBJumMKRlOkEyFsJGIewQ97bfoTlULO
      NXAtU+fg4IBEJu/bCYNWk2g6j2Wo3pvIYLt5XonlfYaGaVrMp2MmM3cuyxuXeeenHxD2XleU
      JHR1RqPZulgVaDEZYIpB4ieCVfFIiM8+f+R7c0CktrVFPBL03WmSrBAMyBz5Lj9oN+s8fbhD
      ruISxahVZ/P2O0QxfZdfu3HM04c7ZL02ohjk3k8/5K2bWyw8t2cgGCGfTTGbrzxM5UoRwzBJ
      eKrTbDREt2wmw5G/kcqbW2xublLMLauYQmxtlkln0jheiHG2ULn33j1MfbVp+4MR8UTC16UD
      oQiZZJTmCRdrfX+XyXTMxEsHt22Dg90d2kOVROQ8CQCxkMwXD59z5colwN0kna6bHryEbdmn
      jEnLWLCzd+wWsosrPV2dzf0MXXAYDoaEIxFUL2s2ms4z7TbIlKp+hmwmX3zJMPdiE/02U9Vd
      FUkJEgoGiHhOAHDoNOtYYoh0wsv1chwMQycQTRD3gnq27TCfjOgvyz1xsC2LVmtV21u+dIVZ
      t0G2XPXd7IVi4ZTtYmhzRsMRo+GImTem3RdP2H2xy8He0qXuYNs2ibRbWHNhyXBKKEJwpqGr
      qk9ZmqajKDLqQiUQi4BjogSCiFLIz9Yb9XscNI/I5pZZegI37rzF5tYlFqMp0WSMZLHM/nET
      xTewBW7cfZuNSyM0r43jmDSOm3TaTTZCScIBmdl0ghQInfLDL1WnasXN2HSLbXQIKj436Hf7
      9Luu0XTtxjUc22I610inU773Cttgb28PR1ydQaNpKrbjoBkQj4ZxHC9eeqJ+t3ppVeMAIMlh
      3vvph/S6bVTd9MsST8NB0w1kWUJVVZRomHgmxcK2aDb7vqvSNSZFjusNbl695EqAN+7g2Laf
      GrCYTrn+zrtMux1fdTJNE9MWKHnpKP1GnUUojGWNSacTiEA0HODTj+8jRTO8cfMKtmWwv7uD
      RpDbIXdVGnt7JDav0N15TiqbRkGgWK6iW/bKzewZuL1um1Q6QyykMJmpiILAZDggk0ogCAKK
      otBudygUXenda7bJ1zZOnFXr0OuPiEQiyMuMgXiGbHZKMBLzU21KpQqzxRzbcZnLfDLiuNmh
      UnaziC8uEgyIosik0/PzR1KpJIpo0x2MvSFbtFtNGo2GVzDhqgTvvfMB8fhyGR267SYHB4cM
      PTeobYNtqHTafc/Aduh1Wuwd1P3MR8dx643DiSwRj7gC4Ti1ao27t1ZfqgwEgwi2QbPtqk5S
      IEQoIBNQAv6GSMaDzBYzHK9uGEFE8DIUl0lW4XAEbMOPcYCrzpysBxBEkYASpHxC3x8P++zt
      POPR013v3Uzqx8ccHhyiGuedrySSTCWRMPykMn0x4+i4SblWXSXD9Trs7e8SCi9jFQYHO4/5
      4tELTG/csiJyuLdPfzzx7xMck26vx8LzFGUrZaKBALqm+nPyciqEHIjw/k8/5NaVmh9AS2RS
      vHj4OVNzZTssXbzL3H/b0tnf2aE30X09PRRUsG0b2YtyrxjHinMsk+H29peHLtiYlsV8POTo
      2JWwi0mfmW6eigQvYXqSJJ0vU87E6HipGRcmAczFHMcGMbU6TrHbbqIS5HLaXRBRjHDrzp1T
      901GA/r9HoOZRckzaHvefWWv/M1QZ8x1h9IJ8SuKAvPZ3OfIgqBQ2aiiGbafnTjsdVioC4Lh
      mG90thrHHO61+ZN//Rdu39qMZqNBtrSxymEKhEgmk0iBpZ2iUz+uQzDqu/PcWMGUy9vb3l02
      w8GYbCDkp0PLgSD6YoZuy+Q9M2RpBG9vX/b6Njk+PCRVqJx5uJQLh06rgSVHqHrpCvF0gRtX
      oTdYlS1uXL5GuVqjN1oWAAlIcoBgQPQ3u6yECCkzmq2xX7c7mGj85O41Xhy2SVzdRFZkzJdS
      IZLpHNJc9VO0bcug0WjSbra4EnMLbqKJNOnEGFNQvOeZ9HsDNNNC00Vy6ThyIMr7H35It9NG
      My2CskQoqNButwiLHuMQAEQy6SSW5YDsJsNh2gwnM98GSMajLDSDUsmd3GiqyJ1UEW6uZs6y
      TDqNNtVr7sVRr40tR6iUgyfqoi8ApqHRHU3QplPfu5DOVyjns6iz6bn3TccDWr0xtRNF8flS
      hUTULXAAkENRUsnYKYPTMOHdez9hMfOkhDVnunAopQMcNV2JU9usIQk2nf4qq/Lm3bf5F//B
      ++ie71gJRSmWSpjzie++XcwmdLtdP+/EsQzCiQLbpThtr441nspQLRd9mwAE8oU8kROpt/NR
      H0cOEY+t3JvpbI5cJulzVlEKUK1VkCX88P2rECiWqmRTCV+dGvdbtPrDU2WLk1Gfp893/X4s
      bQ5Kks1SlL5XW7tycS4lh0gsEuC40fUllW3bmKbJaLAq5UykMlQqFcaDnjffBseHR8QzBUIB
      l0ymwz5CIEzUz9lS2Lq0SbVW5dL2xuq+4yMODw59yTEaDgjH036ah22ZtJoNZrpN2Ov71WQ4
      B0GUEEQBx/4dZ9Q6nJIkqXyJzVqFQj57sQRg2zKFdIJypexP2mTkHhQ1V/Vz70uls+Sz6VNF
      LC8fizLrd5nMx7S8FFaAxXzMwf4+tuDFM0WZgAT9hcRWJek//7QXyKHXabJ32PCJyVjMmC/m
      2CeEoSAplEplop5uK8ohZNGgNzUpZFwOrBs2oVDoROG6QDabOuUFsgy3FqDT7vhzcnjUOFXv
      a2pTZoZELi7R6JzHKBwsR0CWZFSP4IORGPFIlGI558+dsPRM+YwjhqVPaPVmZFMR/76tzRqS
      z0ssGvU2lm1jeXZJIBShVCoRDSirQ7caxzx68DnLhHRJCVGtVpBFfAPbsS0W6oyDw4YvAZrt
      IeVihoN994ADn3CyBT8XKBpLIIv4LmVRUigUi4RE2z+HKZLIcPVSjVw+7+eDDfoDxqMhrWbv
      nHlziTlbyJ17CNfFEYBl0O116XX7/oJIkogkikRP+PhfxsGhewJDt9X0r6XikVO5QFIgTCzi
      +smXCxKNxlDnU1Qvg9C2FtTrXffkBi96mEhlqFWKbgbi8oVF8VQ6tDrXCUcDOM7qALlCsYi+
      mPinzpn6mHZ7jOM4WF6C3PL4wt6JgvuXvUBn5QJFI2GODg+pbbkqkCgHCAgWEyNArXjePDmM
      X8ozCoZj1Go1IqLgS675QuPee/cwdK9syLbAMjg6OvaZkDpTXcItFfy0kpcll22ZzGYzJpOJ
      P9+j0YRydRPHcCXgWQdjJXIlMvHoidiEhGDP+dVHn5D0KuAkJUTFy/1fSqr+YIKhGQw6ri6v
      zcbYtoOsBJjNznMNS+TyWa7duEWlkj+nDbRabSRJoHncPvP3CyOAdKXKnTt3uH3npm8DWJZb
      frfUic9CIZ/l+PDATw4Dh+OjYyzTYOLlzE96Q/S57h545LXqtZtotkzWsxNEKUK1mmUy7PvG
      ZCyRplKpYGqrs2xc1elt5p5aZhoWGCKRkOgb7636ETMdv+BblMNcvrJFOKigyO4m2by8zZ07
      d8imk37fsVgU27b8GoFBp4eJTSAY9JnCeDTCNE0mY1dNM/UZjWYfdT47VWB/GiKiKCKKArFE
      7NQv+WrF94w4ls7e3p7vBnZsk+5gypVrV3z7QvfO2Gy1u97mFslmk6ck17jXQ1U15qblb5BC
      IUujfkwq49phkhJCdnTmTphy1nVxLqZTQpE45VLOty8sIcgH995k4MVUzjwWJRUFESJJd77l
      YNj1XNk2kciq5vllZPNFQsEg0fD57uNbd9+gVC776tWrM/udQeDK9evcfeMuidh5IX44PjrG
      MC3G41VyWLVWJaDILFR34+Y3S6iGzkzVWL5Grlh2dekTLsZOs3HKCzQdD6nXj9GtVaPFbMz+
      CdUpmoy7R7w7q8ISw5FJxiKrskXb4uD5l6i6Tr015jwIgrtJO23vYK5ogu3tbS5fWhnYtc0N
      RCy6nl0iB2KUSxkEx0I3z9NlbWzbrTdeSpezEI5EwDL8Iw4FSaZcLuLYJ6Lc1Q3u3LlDtZDz
      D8ZapkIE/OKTMIblEAquskGbjRbz+YJ2yw0gGuqYVmfgSWGXcHrNBk8eP+HZ0x0vpiJRSEf4
      1W+/ZNuzASQlguRop45FiSXTzGdz0l6wTJIVsFRmmu1nsf6+mIwGNJttBPnsfr5DAvh6qFQr
      SIJN90RARxTFU6kQvaMGkgCKrPgSAEEmFAqT9FJhBUGiurVF7EQwqd5oY+oa/X7fvxaNxdDm
      U//gJHUypNvv0Wit9PSId6Ti8vhEQQpw8403yWbzZJPnfTIEguEwWDblqutjjqYT7D16wL//
      5W/8INvLqRCC6B658lWpEFdvXD9Vb3wWxoM+ndGMincukKnNsSwbORD3j0V5FQKxWOSU5BoN
      ZgQkgVBA9gOPN+/c5d5793jzDbdOWgknKeZTjPo9PyM3lctQrVaIpRKeVLJo92e899Z1dvdc
      G0BfjGh3hqeORZlNJu5RMdrKVpSVgH/s5bdBq9Hg+KjuVYm9iu+dADR19pIXyHVdmabByKts
      Shbz6IaBaZp+usKw36XRaPh+eEGQKFcqFAtJxkPXUKyUcjiCRMkLegB0Ww00RyaXdrlNKJ4i
      l8lSLub9ycgXS1zevkzNO0rFMuc8f/KUp0+e+dVPr8IttgmGgn6xzVmpEIl0lmq54BeAY5sM
      B0M6rcbvSIX4ekhmslRLBd/mEeUApmEwn43Qz40x4KlX0PFiI9FE1Cu3FM//RrRj02rUT3mB
      DHXBYDJzDxtzeyadjFJv9il58QMlFGNjo3Sqbvfo4ADHC/aBmy/UGiyQBHs1T78nEskUmUwG
      4ZyPfV1YHOD3RTyZoSaFTr1oOpMjbtvMFy5HECWJRCqFbdh+ot2Vl853cRyLTquDZZuEY26U
      tzdwCUifTwH3Wr5UQTOsE8f5GTTbLSKx1LmLLSsxiqUigqxQLGbOaSWQScWoN7tUvDNNA+Eo
      +Yzp1i7gcpt4Mk08maZRbwApRDnEW++8g6FNGU51+B3pEF8F3XAIhUJkMp4urYS5tH35K+4C
      G5hPZqQy7iZNZHIkMrnfeY8oKWxsbeGAr4ZGkmniRp+FsOKrgiDQ7XbcNGgvR6tVP6ZQLrJQ
      DSJBmUyhRDKVPNX35tYW6UQY4Rt8+OQs6OqcbqNNqlQ9+z2+Ve8XgFgiRaVSwTphqKrqgtls
      xsI7BtDUNbqdDosTp6C9DMfSUXWVbqvDXHVF6/J0aPHE4VG+6uSfcBahWq2SiIbP4REucfUH
      IyxD/x2Gqk2r1WExn53I/REQRZFxZ5VUNh0PaTab/qkQjm3SajbpdIcEg+c7C74Olp6p/uB8
      O+VVOHSaLWzH8SPBXweipFCuVMilYn5iH44bnV0F0Bz6vT65Ysn/9JFpaKTSGXTVwPSM7ul4
      yJPHT9jz1CTL0Bl2muy+2KXZnbz68G+AfLlKLJnANs5et+9dAswm7iFU5ondN50tWMwmSCE3
      ghwIR6mUy4hy8FyKFUQFdaESjUWIeum5uWKJ03zMYdDvohkWSjBEPBrGMjXarRZSIMLWWR3j
      xhgSsSD1RpNErnhOK4k33v7J6fsECIdCJMpF3zM2GI6xDI2F6Z1tYKpousawN0AKpXnJyfON
      sHl5+6sbvQKHbL7ofULo6xuctmXQ6fQwTYNEZmXPjId9LBQy6QQiAplsFsN2/PQQORDCtkeA
      4Ht4isU8YdUk5p2DFE5kUPfrxJNpEvHzbZ6vg4P9HWQlSL/ZJZt8dXK/dwnQH4zQ5tNTh+M6
      lkEwHPENl0AoQq1WY95fFYC/DNtaEAyGkZQQk/55XEPk6vUb3Llz2zcmo8kc9+7dIy4Lr3zE
      YgWB2tYVPvjgfZLfQEUZNOqMFibqeORLgKAiIsgBgiHv6BIp4BFumMi3UH++DUbDPt1e93dI
      t1dh6gs0XaPX7aHprn0xaDXYuP4G9nzsV4QVK1U3XuFJN0kOIOLQ7fb81PJms03/aJ+5Z6Zo
      0yGJXJF2Z0gsdL4b9OsgKEvMDYPKRunM3793CRAKSMwchWBoRYuOV51lLGZAlumgzf3fPiBZ
      qJw7YEEK+O6+ZOLrc435uM+z3UNiySznKSCCIPoHNH0TxDIFRo1jAtH4KoKtLY+kdf81jTnB
      4LJ+YUo8/Lq/jSxx7cbNr272EmQl6J6VFAkT9tKaY6k0rXadYDJ17jrZlsFwPKNULvnByFQm
      R/nuG6sRKUEsY8HmZhnDWn1F8/fBbGFgLM5X7b53Apirrl4vn/iKliILaLpFxCsljKULXK9t
      kLpx7VyRJYrBr2XwvYxgJE7YgXj24jfesN1iNJ4hTDSKmzVk3JPhpjMVJeQSqSSHcGz3yO/l
      J5L+GKCrM4JeccxkPCeaTxCJxeg/fUFta/vcYhNRUshkUm51mfcZ1H6nyUJdEI4lKReyGNqc
      Xm8EmRipb+kFunWCsM7ChXwm9dug224ymS6QgyE2quUz2xjawks5ECn4IfyLgaEtqB83UaIx
      SidcoWv8bpj6nKOjFg6QK1WIR4IspmNQwoS/pTFvW+53BpRvwfm/Lr53Alhjje8Ta4a3xo8a
      awJY40eNNQGs8aPGmgDW+FHDd4M6jsPjB5/S7AwoVGuYkzG98YTN7WvkYxJPdo8p1y6xUc7y
      yf1fYjoSm1dvU8ysijgePvqCO7fPdzsdv3jK0WCMEojwzpu3T/02bh9gRCtko1/tmR2PRiSS
      SYa9DpF0nsA5ZGybKp988jmWEOTdd97g4WcfQzDJ/9/emfXYcWT5/Zf73deqe+ve2osskhIp
      qaWW1FJvxgzs8bSXF8OwAQ8G/hh+8IPhBz8Y8wkMewYwxvCLYdhjTLun0fb0ZmhjqyVSIsW1
      9qq770vumX7IvFmUVNXT0yqxJfX9AwRB1qmIyIhzTpwtIm5cWQv+X9R44dktbt+5jy8ovPzS
      C4jn1VrM8ZVExDqCIPDMc18jHte4fvUKL3z962jxOJfWl3n39j1efeVlVitBYUF/rPPyK6/y
      4S/fwdYHvP322+wfNxkOh/i+xXs3b/L+nfvsP36M7cPubnADwsneMddefhmj3eDwaJe+4XKw
      t4vrBwLQmTiAz+P7d3jnnV9gOB7379zi1p37NI/3+cXNd6h3unz/f/wFH3z0kOnURBQ8br93
      k1/evosz6fDzN2/y9ru38AHP9bnx4iuk3A73ProN2S3kcZ3GyOXGi6+QdDp0nDgvv/Qibv+E
      wfknN+f4iuLXMoEE8dPxWEEQkGSRN3/+c5Ak3nr77eAHno/r+9y6fYuFrMTN9+9zEN5mhm/x
      /s13aE9MFosF3r/5S3b3D584nxpo7Xp3ykvPXeYXb/6E7lTjhetXo6OItz64x+b2Ns89s83J
      0RGdww8RCttUtCn392toC+uIVvBskKTGuHPz5xjJFbJMyeZz5DIquitz5+bPMVMrVNMSOw8+
      Qvck8M4vhpjjq4m/UQAEATIxeOfmLzgM71jvt+vcvPkOsXSRlbU1fNfnhecD02fS2qc2sJFl
      mWRxnc69n1O98sIT7YnIvoklZRAm+6QWN8Kf+Ny9/R77Jx3MUZub775Hee0qk84+t+4+4OGj
      x0iShCiKyFjc+ughAIl8haP7v+TufodSRgvT64FE9Q8/5PbBAN8ck6pe5u47P+b23ojk5AEf
      HAzwjTGNRp3u2EAU/OjG6jl+d/C5JsL0YZefvH2L7/293/vUz1xzzF/93zf4g+/9Acrc7p7j
      t4R5JniO32nMw6Bz/E5jLgBz/E5jLgBz/E5jLgBzfCXwwd07Z/7/uHXAZNg/986l3/qBmDnm
      uAgMh0Me336XO4c1QGZ7o8oPf/AjrlyqUCiWGNgyluUgeGPkeIE//P3vAnMBmOMrgqQsQCLD
      4oLPQi6J58Mrr7/O6moF07RZEERGhkMxfEF0hgsJgwY3CsyD+XN8+fArfYBhq82vc1OM96vu
      Z59jji8w5k7wHL/TOFMAuvuP+P4Pf8ijBwe/1g7g+z7/54d/dcFDm2OO7/l8KQAAIABJREFU
      zx9nCkAyn+Xy5Wuc1I7OvSvnSQj4fHP03y54aHPM8fnjzCjQsFmjMZSRVPncuzjnmOOrgDN3
      gIWtZ5HHDcrrG7/WDjDHHF9WnCkAzQcf0LOh8XCfz3Y37xxzfLFxpgCULj/Dt7/xNVLZHOc/
      bjTHHF9+nCkAghxj2m0wMI15nHSOrzTO5e+J6TLpNDn/YZ055vjy48wokO9b/PKt90lmC9Gr
      KZ5tcPfRAaVsjKOTLul8At3weP763/5q7Tnm+KLgTAEQBJWXXr7O3tE4IhCVGMVcBss2KRez
      DBFIJ/zgiVHPw/d9HGd+q8IcXy6cXw0qK3ROjnFDIsecMhwOqCwvMxpN2crGGBrBC4O+KCII
      ArI8Ly6d48uFMzl2Ouhw584jUtGT9yBrCa5eDV5mzKSCt5YW5yGiOb7kONMJTmSLvPLisyjJ
      5K99YMDzff7s++9d4NDmmOPzx7n8XVmrYnvnv/X0KfiwW+9fzKjmmOMp4dwwaPOowds3f8pB
      rfU0xzPHHE8V5wrAaNCjun6ZdPK383TnHHM8DZwrAAN9zIdv/IJEJvM0xzPHHE8VZwrApN9i
      ogtcfu7KvBRijq80zj4Qk1ukupjAM8V5KcQcX2mcKQC+56FqcUbmZH4eYI6vNM4UAGMy4I23
      biNaY4ynPaI55niKOFMA4uk8/+h73yVZWiZ5FsEcc3xFcK6PO5y4oA+w/5YN/uv/+NefcUhz
      zPH0cK4AOOaUVL74NMcyxxxPHecKQCyeoHl4+LfeAeaY48uE8xNhrWOalkv8N2j0P/3lLz/D
      kOaY4+nh3HLodz54TF7U0OFjB+OHzRqHA4N8XGRoeFy7vPmp39+tzYvi5vhy4EwBSGSL/Is/
      +iccH+qfuhXCl2XQJ+ixHElNPD0Rho/vB3+A+emwOb4UOLfa+d5HOwimj75W/JgZJMsSkhYn
      F5cZGf7piTAEBEFgdkv6/HTYHF8GnMuli/ksO8ddPlkLmswUuJYpADCPEc3xZcfZpRC+xY9+
      +GN67Q5zQ2aOrzLOjQJJkoRtmPymT1/8lx/d5tZf/gfc9oPfsIU55vj8caYJZJsev/cPvsdi
      sfCZGveGx3jNe/jGEHnl5c/U1hxzfB44cwcwhx1+8IO/4mc/e+szJ8K8wSHu8bufsZU55vh8
      cKYApEvLvPa1Z5lOxnzmF/TmmOMLjHOjQMlUkkTaQnqao5ljjqeMc51gLZnna1e3LuREmG8M
      8YYnF9DSHHNcLM4Ng77xk59w886DC9kBvOYdzDv/iz/73/OLs+b4YuHs9wEElepyiWRM+43D
      oJ+ED+yddDB++ifsnPQuqNU55vhsONcEiqsit2/fvdhD8b6P177Pn37/PdzmvYtseY45fiOc
      KwCL1TXKC7nP7ZVI86f/HvvO/+TW4wat/uRz6mWOOX41zo0CObZFtrT4ud4KYd/9C25nt/jp
      e3v84ysORvMxJ/lvs98Y8HsvbrIm1ZFK8wc45vj8cK4AjIYjrPEUGz5VEAfQa9cZGD4bK5XP
      PIhGb8ykP2HS2KPJizw+7rJfH/Cv0v+Zf9f/Y/7t30/gj+o0kze41xEp5ZN0+hO+s2qD77Pv
      lNmq5j/zOOb43cOZAtB8+AGZredZcz88NxE2Nhwk/+mkydyDt3Br73NSivHXDxRubJa4v1fj
      1b3/Dq7Fn/b/mH/zjQ5e9zHS4jXc1j28xev8191lZNHnjzZr4AVlfUKqhD9uImSqCJKCVH3x
      qXzDHF9MnCkACxuXeeOtN5DjGWLn/qLL0LyoGNFnhz84wmvdQ9DSeK17uGqB3VoCVXCwzb8E
      xwRAWrqBW/8AaeUV3KObOMvf4k/uXmJ7pcg/i/0AgB/H/ynHrSGblRy7tT7bK0XWy2lWlTb7
      1iIAG4kRvjVF0NKMDIeOmyEZV5joNpIo4Hp+RCckigjq/IKZLyLOFABRifPt73znV/5iZWWd
      CkQnwihusxZPE647i5k4CX8NP5WHwhVIllkrZyG9zZqSgeR2QJeKMy1niKVVWFhlIRtnrZxB
      FkWIb7OmZfBTFShMSaazrJVlFrJxpqUsZC6Dawc06QpYOn5qCQpXEFJl1soZFFzIXgbHAsBP
      VaFgPkFXYqWUxvVcPDcQaM91g397Hq7nYtk2P755n3+efYMfDf4OAP9y5QFebw+xdBWleZ+R
      s8LjwjfZqfWIKTKG7YZ09/F6+zzK/1069WNeX/XwmvdBjfPnvWCOK8UUtc6IP1wbs9h5E7F0
      NaRJgDUFQMit4vcPg/UJfx7RaUn+vPstAJbySeq9MVuVPDu1XvR3UlOZmEFlVzmfpPEEzY1q
      nBenP0K59g/BC2j2nSU0RcK0HZIxlYlhkYlL5O0TEBX2rSLrcp26sEzea2KqRXq6H9HKksSy
      ECY/5Rg1M0kx7qMbJr6WJWeHP5NUcIO1qQnLWE/0N/tbkSTscG1URaLoNVFjMQa6h60WAhpZ
      wnYCmvVYDxyTgVKhr3tUpA5qLE5f9xG0NFm7BpIGrong+5/djnHd02CpKAbHJH8VLormi96f
      IAj8qun9deguiua30Z/v+wiCgKlP6A/HiLLKYvFJX83H80EUhKgtz/MQxY8HJ5/s56w+fc/D
      FwQkUYz6/JvYWhDAcbxf/wGYXwVJksD3aTZqmLaNpKaolov0WnVanS5LG1fJxIKcsmMZPHi0
      x9LyOtlUnEazGbVTLpVO27Fs5FiaSqmAORlQ644RgPXVZfA9ThotqkvlqH9jOmZn74BccZFq
      eRF8l0arE36tSHlx4Yy+PFrtLtPxgFS+RDGX5vDoCEEQWFleBsCe9umOAw0lJ3IUUxKjQY/x
      VMfxRDbWlvEci6ODPXRibK6tIAkCvXYTy/WRlBjlxQKeY3JSb2EaU8qrW6Q0mX63xXhq4Pgi
      G6vLOMaIB7vHFEtLlIs5AFqtFq5t4kka1fIijjnm0X4DBYfK5jYJRfz0d4VwbRMHGU2Ghw8f
      4TguldUNcukEvu/TbpzQ1122N9fA9zg+PiJbKJNKBGGPGc1Ad7kc0uzt7uD5kF+sks8kGHZb
      tAZjBEFma2MVXItbH97Dti2uXX+eVFxFi8UwGk0ExQ94ZQbPxbQdEjGNVu2QwWhCz4BXnr8G
      rkmjMwgZTKVczH3qO13HwrQc2q0WlZVVRFGkWT/G8UDWUpSKWZi02GsHu+jG+vrH+nY872Jv
      P3cdB8eF0mJwjkC3bNJxhaNaOHDf59GjR7TanWgiXNuk3WrR7p7eJOE4Do4nUFoItMXRSR1N
      kWi121E7x4d77Ozs0B8FOQRBEJhMp0gz7eHDoNeh3WphWIEDbJs67VaLzhN9dVsnyLEU08kY
      AFUWsSyL3mAUTVS71aLdbuOF9p3nOti2w+ITzIZrYjhEeZNmux0sSKsRkdiWRSyVJ6XJYTsu
      tu1QWixFcyGpMdrNZrTlT8cDppaPY+oBjWUgKiqKIqKbTkgzpN1qMZroZy+M5+Ih4ngeihL0
      3Wkc0xuM6A9PczC+59FpN5kagcB36kf0BkN64Rzju4wmOpLgM5oGfY3GYyRRYjQO50sQSWfS
      5PN5fD/4hn63gxpPkkzMTpf7NGtH7O7tE1otFBYWGU+m5NLJaP163WD9rNCcnIwGtFuB0gCY
      DjvcuvUBtm0yCv3RZquNKEo0m/VgvqRYYKb7pxmtbrvJSa0OgnixAjAa9qjXTuiEia1cMsHY
      lVF8K6IpFAoUsqmI4Qv5HJl0ivF4GtGMhz3qtWM6g6CdjfU19KlOtVKNaBZLS4iSRL/XDfoe
      TXjx6y+DHx7iDLdEURRIp9MALBQLpNJp3JC58D20ZBbbMiIzLqZpxDQNwwyd5liabDaDOR0T
      VwOhnU7G9Ho96o1AsEVZZW37OV64soYiB1O6uryMruusLK+Gffm0Ww0ODw6wwlXXp2PqjTr1
      cKcSJQXbNJF9C90OaCRRxDTGKLGAMZRYmoQCrU6fmBL0lc9miakSIZ/g2iaHR4ccHp0EUTxR
      opjPElNlpnrAPMlkklgyzUIuFc2poih0O+3IgV+orHLl6jO8+Ox2OKcSiwsFEERiapAhWqpU
      USQp2jHxXUzbZ22pQKMTrLFtWZimQbMVKjDXojO0WCnnabaDspid3X0qiznyi+WwL9ASWa5d
      Xo8ESVZiqIoU+WrpQoXXXnuV1dVVUmowF9VKBce2yaSDh11c10If9XGEMKPlTGkODEr5JCfN
      7gXvAILGa6++RK8daL3RZIwsSYxHo4imWT/Bk2Is5IMBGtMxRycNVlZXQgofV4zxjVdepNsO
      GOxo/4Dy6jqDXjiBgoAkBPZiMhUwtybD/t7eqUbzfVwfHNdDDbWe7/ng+2xubYXtiEE7roui
      Bdu+KIqIokirFbyN5rsWh4dHZBcqaCFzx9J5NjY2uLS+/LHvN/o1jrqBZjyqNdjYWKdeOwLA
      1ocUl6+wXc3S0wNOHU5tXvvGNzAnAaMIsoIii0iygiwFfdmuh+u4aJoKgBeOJ79YQQ3H0++2
      GExslsKd13Ms6rU6uiOgyYF5Wq/X8X0fPXSEj2sNFFmi2zuty3ryWhsIdpY7H7zPu7c/iv7P
      sR18SaOYD+Z9b2+PUrVKe7bTSRrLpSz1vsHWSsDMmqYhCiKaGnwDoko2IfLwsMVKZQGAleUq
      vpzAM8ZhOyqaaHNw0maxEFgCEg6qGiMWD3YS1zI4Otyn3uohhgrecx1sx2WxFETrJEklk8uT
      ip327el9PnywRyGbvlgBKGaT3L2/w9r6GgDpZArbsUmFGhgBlqrLJGMKghho01gizfraCoI/
      cywF0gmNo1qH7UvBpVsrayu89+b/wxW1iEZVZBonx5ihplS0OKok0B8Mo74UNc6NZ67SDpl5
      PBxgux47uztRO4l4nERMYzQOBGdq2CwtlSmHzCRpKZ579hq2qUc5kdGgR61Wi8wkz7Go1+u0
      BzpJLfiuciHFz372/8gUloJ21ASCO8VWc5TTgTZaKGQ5PDxiffNSMJpwS/YFESm8X0aQFFLp
      NMN+sNPJsTQ3nr2KZejMBrR26QqL2ThTI2BuSVYpl5dQsIJolChz/cZzXN6+ytpScJdHOldA
      FEVWqkunCygIFPNZRpNgN9bHQ1CSbK7NtLuP6zrYps5oEuwk1eVl2vUTLCccjOcyHE3RJD+i
      0Q0LSfAwnfB8oefgyzFWlyuIodE4nOgIoogf5msIBbF2fMgwNO0SySSmPsIXlXBOYyRVgVim
      GCkM13VxHJtByAeu72G5Pr3QUkCQKJdLJBJJZPmCTSAHkbXVFaRQGkeTMYqsnO4Avk+rM2R9
      dZnDwyCkp0/GjIcDUrnwkhXf4+j4BMc2GYZm0dHBES++/m0kz4z6ajWbrGxcIpcOru6KdpKV
      cCcRRBKqwP7hEQuhja1qGqIooimhNhAEiotllpaWyKSCdjxbZ29vPxIs1xixc1ij0+0hhmpm
      Y/MS6+vr5DLpj0+A70bmQ6M75rvf/TbDbmCL2pMe9e6Y6XiEGdoqR0fHOI7DcBjMj2vp6I6P
      b+tMrdAkU2W88MESCHaSvcMGnd7peA52dxgPe0zsoG9j3MPzPWRVY6g74Hs0Tg556403qLUD
      x9IJ/aFubxAN37ZtHNdFDv0zRdWIaXKkHBAE4okUIh5iKKDjQY/9vV0ENR7RqLLPcbOHIgft
      pFIJPFEjH64Vns3e/iGtVgvDCoRi5p91+8OID1qtDutbl0lHTjkf26Fc28RCw9MHOKFZ5DgO
      2UKR7MyXEGVEQUQNTTZ8h/5wSiaTQhSEixQAn4P9PVqtVuRElZfXWV9doVwKmVsQycRF7j0+
      oloJtkfdsknFZY5njrIgsrK8jCJLGEbA8KVKmZ37H1GuLEd9ZfILjPtt2p1AsmPJcCeZqUUf
      5FiS5UoJ2w4m2fNcHHMKcigAvk+jfsLxSQ1RDMykRDLFdDolmQgmUJA1CrkMlYVcxJQP793F
      9Vw+evAQCJjbME0cQY00YTET5/7DnUi7y4kMm9VFbMvEC7Xe8vIyqqpgGIGGU5N5nntmm7XV
      5cjOjakqiiyjqgETKPEMz914hpee3YyiU7lcnnRxCdULNK6sxhgMBgyGQ+KqGETWWm3Wti6R
      SQWMqsoChuWQzeaiFXQdB0GUMPRgPOPQwR3PHFzP4ehgD19UaLaDeU9l86ytr+OZ04hmYsk8
      f22DVujnKapGTBGpt0ItLMd44dkr2LYdCdLK6jrXr1+PzDpcm2yhiG1bNENfYjwe4QkK4SaL
      7/s4ts3R4QGOG8x7PJGgfrBHsxsItm9b9PoDUslUxBeWafB4Zy/wEbkwCDz//HPYthV9lKlP
      aDabmNZsW/MYWT7muBNptOryCvnFKpfXylFLoih8LAokiBJxRWDn4Djqy7UM4okk8ZBRx7pJ
      LBYLQqAh9EGbn731XhT50E2bpCbhzY75+A790YSxrjMYDsK+RSbTaaRdRVllZWWF1ZVqNFnZ
      XA59qpPNZgGQtASu62KaJul40JcaS2LrI+rNdjSek6NDctkUUyt06iTxY1Egz7FoNBp0BhO0
      0MFtdHo4tslJ7TiiqdfrdAZTNDkYY664yMrKKrnMzFFOUc5qxHNLJDUZBIGlSgURPzItFsrL
      LGbjESNHER58CHeARDJNMq6RCh1KJJXrN27g2BblhcBEVFUVwzCjQAOSQkxyODxuUswHwuX7
      Ho7jUMwXIj44ODz8WDRw2Knz5ptvRnODKCPi43kuiVgg/I7r4bqn/pBrGxweHVMsVZFnZgcC
      siJHuRo1kaGQ0iJhRFLYXF+hkM/jev7FmkCH+wfBR4XXIqqaiue6pFKzSINATJFIZfKRTVY/
      3KU/tfjoo7tRO67j4Ngmg9GpQysrKvinCahUOo2qxUjEg8mxjCm1Wu009o+Pkszz+995jek4
      dKx8AVtUsafhZAgSmiSRSSbIZgJmHk0NXnn5ZfLZYEF9z2Fvd5eTeoeYGnyXpqnUjvbpjwKt
      59o6+kRnOh6dLqAgoCgybrgQrmVQWCigWy6WHSiEwF516A8G4XAUBHxEJUYyFvRVLuYQJZlK
      uPvZ+pB6s029PSCuBdt6u3HCyckxZrj7uI6J6atogoPn++Da7B4cYxhGZCp0201ELcXSbHcW
      FW7cuMHqxhZrS4Fjapo6zd4QRQi/yXN4vLNLu9NFDs2bfqdFp9uF0KfDcxkMxxzX6pEi9Fw3
      CC33+xFNrlTlW998HSUU4nanz0uvfgPZn91D4tHrD+l2uiTC8Gk+l0WVfIbTYOfTkjmuX9vG
      NJ4I5foeK5vbbK4Evo1jjBDUBIuFbEQz1Q2y2SwxTblYAUgXFvjWN78Zhef2dnYpLlXpdmav
      zfsMBgP6g0HkrMaSGQTHJJ0+HWBhocRSuYxjBx/aHw6JpfJ8/fnrUTu6aTPsd+iHNmNcDSIo
      /SicKjAZ9tjfPwApYKZ0MobrCmjqaX3rZDLGskzMkCk7zTo7OztRaNIateibIDgj6v3ANBj0
      OqSLS1RD5lESOeKJONlUilwy0E7dTovS8gb5ZLB4sprAcz08zycdMnc6m2dpaQkhPHdnDBro
      JEj4UxqDMHQsCHSajShsLMoa+VyOQi6DHwpXI4p9B5EYY9im3jdwbSNQ+ILA6voGW1ubpOLB
      +HzPxZiOOZyZnp7NweEh9+5+wHGzG84g4FgMpqcvxRVLFb756kv0Q79lNJrw7AsvMR2GO4ko
      s7GxSjGfxTCDb0hm8qQTGunZm9O+x+HeLru7u5HjvrK6ys79j0jnF8KeRHL5HIViMYrwfNIH
      MMc9Dmotur0+Qkg0mUw4PtijEe5siqdjmAbDYSh8szBoLs7ecfNifYCTgz12d3cZTQPbvbq8
      zL1b7yKqszumBZbKZdbWN7m2HYQiYzGNXqfFSePUVDD0KZPJBD2Mxff7fabjAXuHR1E7gmdR
      qm5EWlC3PmHeAKlUil5/EIXf0oVFLm2uc3V7FgYV2Ni6RDwWY6EQbNf5fA7TsoKQKaAkiyyk
      FBxBI5cI+srmF5DsMZ1hIBCOPqReryNIQmSXFwt5fvnO23ihbyEqGgIO7XYHKVwsyzSYTCZM
      wqSSEksx6tTQiVNMBb/X77bJLlSiECf4jMYT6o0mYhj5WA5j3+nQVFGTea5tb7G2uhr0JQi0
      a8f84hfvMg2TZ8XyMplkgsQsPChI4JhUVzeinc4Kdwt5llwURMb9DvuHx5FPsrRUpnlyTCod
      +hK+x2gcJLRaoYPdniXUZiFqUWKpvIgxGUUJNc93kdUEyowjRQlF9Om22+iho+whEkskEcNd
      QlbjZFMxqpUKbugDRGZSuOa2nEEEVC3kQVHBNUa0BgbLpcLF+gClpSqWMWEURn1atRM2nn0B
      azqMqERRZNxrclQLNKwxHeMICpc2woQRPhPdoNc9zbxmckVyuRyba7MIj0A6k8OYjsiEdrgi
      gu4p2E/0NYtrz6xDYzLiow9v88bN94P/8Dwe3rtDf2JychIUZ9mOi+s4aLHZLuFjWxZaKkcq
      1NzRVfAhhRzLsLa2iqSmKGeCic/kF7m2vYk1WzzHoj8yqFbK0Q3a/eGEyWgQJeHkWIq1pSyP
      H+9EybJcYQHBGtEdhQ5uLM1KOU8mnYrmx/VcbMehFMa+remA+skBj3d3qfcNQCCXz1MoFJjF
      Tk19gifKGPppAlLVNO5+cPvUkS8UyOfz5HMzR1lgfXOL1bV1sqmgTrjVaqGPeuhPXCKrT6bo
      lk0pLOdIJFNISpznn7kcMoGMb5tU1zaIh9GZw6MaGc1laM3UvUen26e8tIQS+gm9ThPb8SOF
      MQuDJnKLkfOcy2bJZjN0e/2IB1KZ/GkNkqiwvbXK/u5jhhPjYk0g0bcpVTdIhE5KuVKhWz8h
      nTmNNOSLi1y68gyrlcB8iMVT5FIJ6s2ZmSTg2oGDmwgdXDyHWq126lD6LvV2j0p5gb29fQA0
      NQxxzsJdgkC5ssxLX3ueVphQM6YjXFE7FTZR4vqNG/i2SakUOOGC75NMJul0TuuI4okE/Xad
      Sag905k8a5eusVkJtLIoq0E2UpzSGAU7wMHeY8bDHmPLD2mUwCkUJZRQcytiEKqMxQIzybNN
      pq7Cq19/buarhtv+qe9jDBq0ehNsY0J3GoxHUVRkMUhuASSyJYzxGE1RyCUVQGA6GVOr16NC
      My2eRMIlM4sC+T6tVpu1rctkw0hRt9vHss3TEhTH4PHubvDnoAZAMp0hk81FphWOSbvXpdXp
      RdGbk1od3xywdxLOqe9RLC0hiWKUOV+pVjhu9ILq3XDei8UCgiBE4dTLV55hY30tqEsiEPSd
      oxaHjx9Evo3r2Ni2HV3Pr8aSGIMG9x7thbzk0hlMeeXVV9AU8WKK4WYQtSSF3GlsfNDv43ge
      o8GQtZWgjGFv5xGJRAJBTVEpFUJ99GQG0icx2069gJkK+TwIUqTxQER0TW59cJfK6mb4oXGU
      iU5reJpzeHj/LpbjUV4Jza1khoLNaTWn7/H48Q7t3oCVjYBGVVVsD1QptJVtg92dHVwlwfWw
      hufx7m70jVe3t/Fsg7dvvkupssJyPFisQmGBtqCQSgUCKUgqmirjIZ1GmNT4x89bCAKC51Cv
      1UgsrJOKweHRIal0jkQY+4tlFlD7h+QKJRbTwRg7rQbHx0dsPP9tAPRRh1ypSqPRZH0jGPPm
      xhpwWska1AKNGRizBJZDJl/EsS2a7S4bK0uk4iqdsYcWZsmRVHzLwLBdVjaCk4CWoWO6Pnqv
      y8rSAihxXnrp6x/ji+2rz3zs37g2jx49wHF9MgtVriYT1Gs1rj7/InuPHgBl8D0GgxHd/oBC
      WB7x8OEDbMtCVGI8c3UbNZHl5Zdfprb3gJHpkU+IOI6LIIiRADiWQa68Sjw0pxEEZFGg1ahj
      y6mLFIDABzCmU/ILZfKZJKqqIpouqqJENB5BzYtpBQNStDiV6jJPlPkw6HWwHY9ULiyqm4wZ
      jwZ4aooZWblcptHuR2UOs0TY2mZo3/suriAFTmS7wUJui6OjQ0RZQ5DDRRdErj17A99zOKq3
      SFYrJJJJut0Oeqi5pVia115/nXazgeV4qLJINhmn02mjpgOHzZr2KK9t02qcsLUZVBwe1Rpc
      u3aVe/cfsFjIYg4bTP04RaFPfWBSyWpMx0OmuomWSFEmiCY1G20EwSGzFGjGhVKFauX02Knv
      eWixOCDgeR6SJLK5/QzLK2sMdBOIB4WBuslatYTjeiiCx907d7A8iUr46QtLKywsPfGSjyji
      uw6O65EJIybxTJ6tBfV0YQSRcrlEqzuMtLKmaeiO+USiyeXBg0ckYipqZoFSPk2nfszEAcMw
      uXJ5CySF1eVVur0u+VBhLlWWaJwck529TCrKbG6sIuyDYVokNIVcOoEjFlBnzG1OOTiuMZ7Y
      PLsazNdoPCKeSDMaj6G8gOuYPPjwNqnKJZZKwfharTae51CsZi9SAATWNy9jTIa44aRq8The
      q8XIFCOaXCZDu90kvRDY85/UpggipcVFpobFQumJZJkm0/dOHdxuf0gmk44cytxihdcXnzif
      LEgsFgrYrkcqG9h/iXQudJjCbdb36bSb2I5HLBY4SYNem97IYmsrEDV70qXvJlksn5YM9Idj
      qqsbNBqByaEmiyT0LuvLFRzHQ5FFLm+ufazMQYmlGew+ZCCIXHkmMMGWSiV6wzHp7KyGx0aS
      BRBUnNAHyKcTnJyckM4VSCdiCJKM55hMDJv8QmDzn9RqVCsVFsNkrO+5TKZTYpJLwQdEkfJS
      Fcf1ogRbt3HMyAZDN7i6fQk8J3J6+8MR5WKORw/vEYunkNQY6ytV8F16wzGZTDoSgPHEYHV9
      g8P9PcKPwAs1sGmaQBrddlAVjUl0jsKnVq+jqXKUI1I1DVVVQuHmCWc6Qas3pJBJ4vswGfYR
      w6oB1zap15uIsWRUClFYDNZptRjQaMkcr3zjdRqdsObJcxFFAR8Zx3Ev1gfod2oIajIqLTam
      Y0xfZmnx9BDErBguHyZtyrkMyVQaMQxV4nuhfb8Y2fdJTcaUEoipK2LpAAACt0lEQVTOzGHz
      sS2Txzs7UU3RoFVj7/CYew8eBSQCGIaO61hRhMC3dO7feZ+7uydP0Bi4rh1FNdYvXePrLz4f
      5QE82+Dxzg47O7tRCUN5scDJ8TH5YpDAEkQBQ9cx9aCeBWAwGCLLMqPQJBPVOOWFAslEIqrz
      2T8OGPfk+AAALb3A9uVLXLq8TTE0b/aP6wHNUUDj6EManVEw+NBsbDdq7OzsRKG/ZHGFF65u
      sLy8EjmHqqaGTBYmBS0HTZZOzUFJI5tKkEwkWA2z9NWVdTY31tHCXRZBJJVIBG/ChX2XSgUO
      9/c+FmXJpRO0222UsOSkkM9hmTqTWThVkFhcKAbjCQVpd2+fxaUK7VY94pVsvsDSygZX1wPF
      lpmFUcP501J5Xn/9Nar5OCMjEKRhv0ujXqc/DHjQsiyO663IR0COsb29zebWJVbLFxoFCtL0
      jm3geQGjaIkU2VQCYRb2EASuPXsDRfSjmhnLMrEsk8kT8XvJNbn1wR2yYeZwYjrEFSlKKiGI
      bGxsUMznowWcWA6xJ2k8j1a3hyRK1BrBpCbSGdLZPMkwdIrn0ur2kUQxojnc2+Hk5ITdgyDk
      qqQWqCRcRrYQfUet3mCq6zTC37GGbQamAPaIxiBY5E+eB3DNKRPLJ5VKMovEpGMy79+6hRoP
      hM2adHl00KR58JBe6OB+kkaOpajmFDw1E2m9T8Icd3h82KK+/5C+7oAQCKhjW5Eflc/nsUw9
      qq0HkCUZwTGohSULznTI22+9STuMQOE5HB0dc3x0SC0sY5YVDU1Vic2iZr5H/eQYMZYmkww8
      nOl4SK3RYWX51M51HBtB0lgIq0qLuQx3bt/C8cNd3ta5+e777OzsMAyL6jrdHul0OirFdm2T
      RqOB653mBza3LrG+vkE2HSRfRbODLJ9W9+Ka3Ln3GL3f5KDR4/8Dt85KJv+nEFsAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By Location 2022 ' width='192'>
      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
      5/ht3FqQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By Location 2023' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By Route ' width='192'>
      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
      M/L/AxCZ5Z7GB8LUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3xU15n3v/dO0cyo916QhAAJiY6RwRhcMC6J7SS2X8dOIcnm3c1usilb
      ks3um2T3zaZt9fvmTWLvpjm24xq3uGBsTBWSKEKAQKg31KXRaDT13nveP2RkY82ARhoV0P1+
      Pv4gz73nnGfunN895XnOOZIQQqCjs0iR59sAHZ35RBeAzqJGF4DOokYXgM6iRheAzqLGePEP
      IQTnTtfQ0z9MSmYWyqiDQccoOflLSY4yUN/SRXpWHtnpiZyorkARBnIKi0lNiJ7I7EzdKUqK
      S4MW1tV0ns5hByazjbVlxZdcU7xjeEQE8mgH3SKFgpTISek7Ws7T2NJJbFwyublpRMcnYw5B
      wnUnjxERn05BTjrHKw+jSibyikpIjptc1ntPhbbGenqHRsgpWAGuAdouDFBctoahrqaJz73D
      Fyb+TkuMmbpBOvPORPWRJIkVpauxWiMoWVbEqnXriLBaKcjN5FjtOTZuWE92ehIAdqeb9Rs2
      cvp4FX73CJWVlbR19eFwOBDCx4nqamrO1NPW1IRfQEtLCwAXWrtYvn49noFeOjpbsHtU2ltb
      UAU01x7mtb0VDNvt1NTUUHX8FJri4WhVJQ2tnQBkLynCao1g7dpSvC4vkvBy5NAhKioqOH7s
      KE3t3fR0tFBVWYXTowDQ1nSOqqpqRkbsHDpagwSAYMTlZf2G9dQeq8Q53M/Ro0dp6eimsakJ
      ITRaWtsASM7IYd3qEupOn6a+qYsNa0s4cbxm/PNVxdSdrpv4++yZs3P3y+mEhSm9PyXZMPkz
      ScJglKk4cAAMBo5UVo5f0ASqEJysPUlSrIHqmnraO7rGrwkfNdVVDIx5SU5MoKb6OC1tHRgk
      SM/IYFlJGTE2MwXLSvB7nZyuPMSIIlN15Mik8i90duLXvMgR0ahuNyVr19DX0crhwxVIwkdF
      9QmE6qe91876NSWcOtdMfn4++TkZH/gOMgaDhKapaAJqamtxDXTR0tLAsFsCJNz2Xt7aV82m
      TeswGs3IxggMQsM13MNb+49SXr5h4u9Nm9aH/gvozCtXFIAkQYwFqqqP0tE9AIB9oIfq6ios
      0Ylk5eQgVMGqsvGuz1h/G90jfoxGI5GJuQyeO0BG0aoP5CdjFF58hhiksTaikvMAMFmjaa07
      wajbhyRJIEFaZjZGSaNsVdnlLBw3UpKQkMjKykQyWlm5YinIBjS3g+qjx0lMTr0k1VBfN9VV
      ldhik2lsbEA2GDAYZErWrOX11/dRujwHhMbru98hOSGGvoFhjLioOHyY+LR03nhr7/jnfb3v
      /90/EOLj15lvpNn0BLsdQ7xbeZLbb90+6ZrqdfLG24fZcfsOTNJsWRA6Pe2NNPeOcf2GVVe+
      WeeqZ1YFoKOz0NGnQXUWNboAdBY1ugB0FjW6AHSuKRyDvfzhpZfovNCHOoX79UGwzjXHoSMV
      GIWE3T7IQF83EVExdPWNsmvXZ4ixGC+51xgkDx2dq5bsrCxkIZGWmYlYthS/Isi0jxFhmDzf
      HpYWQAgx7rzS0bnKmHELoGkaqqrqAtC5KglZAN3tzXT02IlPjMLt0SgrWY4QAoNhcryQjs5C
      J/QWQDZglgSKbCbapo+fda5uQhZASkoKXmEiPTEKh2c2TNLRmTvCMghWVVXvAulcleiOMJ1F
      jS4AnUWNLgCdRY0uAJ1FjS4AnUVNyNOgo8MD1J45T0paEm7vuCNMR+dqJWQBRMUlkJObg6op
      GA0CTdPQNA09qHT2EV4HkskGsh7DGC5Cf5KaQnJaBpLficMDsizroRBzgsC9+wcYl9yIacVd
      823MNUPIApAMZiwGwBRDsm0WLNIJiPCOofWfR5EMugDCSNBBsN6lWVgo7YcxLr8TMdaPUPQY
      lHARVAC9HS089cSzeOfSGp3ACIHS+Damoh0YUleidtfOt0XXDEEFMOJwkJWfh3kurdEJiPA5
      Ea5B5LhcDPk3ojTvm2+TrhmCCkBVFAY7u9Eb2/lHaT2EMXczSBKG1GK0vjqE0ObbrGuCoAKQ
      zDZWlRTNpS06gXiv+2MsvBkAyWhBislEG2qeZ8OuDYIKIDs9iY7eQd1VPM8IrwPhHUGOzZ74
      zLjkBtTWg/No1bVDwPrtGuqmoqae/OzMSXurjA73c66xle7ONs41tsyBiYsbpfUgxrwt4ztg
      v4ch+zqU9sp5tOraIaAfwO/2sGJlMUde28NthXmXXBuy2xFuNw5jApERsu4JnmX8DXswbf4a
      iqK8/6EpCiQZv6MPyZYwf8ZdAwQUgMlq4ezJOjZtvo4P+3fTU9No9vaQGGnE6RW6J3gW0dx2
      8LswJeRMvpZbDheqMS6/cx4su3YI2AWaaAEOVU7qAplt0SxfvpSk5DTystLnwMTFi9qyH+OS
      rQGvGfNuQGnZP8cWXXsEFIAA6uvqiE5J0v0A84QQAqXpHYwFNwW8LsVmIcYGEH59onomBBSA
      LS4WzefFbLVO6gLpzA3CPYxQvMgxgVtZSTZgSFuJ2nNyji27tggogOGONnyyAc/ACM65tkgH
      ALVlH8b8Gy97j3GJ7hWeKQEFkFK4gi3XrSctKw094HPuGe/+7MWYP/lstQ8ip5ag9Z3VvcIz
      IKAAJKMFozbGiNuvO8LmAeEaQmgKcnTqZe+TjBHIsVlog7pXeLoErd/n6us5V1M7pUMGdMKL
      0rwXY/62Kd1ryNuC2npgVu2ZKkII/I17cL/6dTRn73ybMyUC+gGEUNEUC6vXFfNh95bHMURL
      7wip8VYcHqFPhYYZIQRK87tYbv7OlO43Zl+H+41vYV6/a5YtuzzqYDPeg/+KHJeDqfQ+3H/8
      Bpatf40hff6PmxWqgnB0oQ23otnb0Ibb0OztGDLXBV8RJhQ3I1550g2jThdCUxn1KBiEviY4
      3AjXAEIINEs82ge9v8EwRSEkGb+jF8mWOPsGfhjfGMrRx1AHGjFt/ipyYiEA5p3/gmfPP2Bc
      dgeG5R+ZE1OEZwRtuBVG2mGkA224DeEaAMkA0ekQl4Mcl4ecuRFjVBpKx5HAApAkAwaLRMvR
      86i3br3kJluUDTE4AjYTLq+me4LDjK91P+bCmzAap75aVcsth65qjHO4VFIIDeXca/hO/h7z
      2k8RccM3Lj0jIjYN493/F++7P0IZbCRiy1eRDKbw2qAq+E89g9LwFggNLLHI8bnjlTz3ekyr
      H0SyJQU9u8K4fGfgzXFdI4NUHK3B54Nbbr+ZK5mtb44bHoQQuF/6Cyy3/iNy5NTf5pq9HW/F
      T7He/qNZtO591L6zeA/+O4bUlZg3fAHJHHyuUAiB/+TvUdoOYd3xv5GscTM3QAiUrqP4Dv8U
      Y8E2TKseRDJGTCurgK8ZW2wi2amJNLb2ok+wzR1irA9JNoRU+QGkmMwJr7BkssySdSDcdrwV
      P0U4+7Bs/zZyfO6VbZMkzKsfRE7Ix/3yl4m4+X9hSFo6bRu00R68B/8DZAOWO36MHJUy7bzg
      MrtCLC0uwBCRxvR0pTMdlMbgoQ+XY9wrXIrafRJjznVht0toKv4zL6DUvYR5w5+MxyeFeCSW
      Mec65NgMPLv/AdOaT2MqDO17CsWL/8TvUFoPYr7+yxgz14aUPhhBp0H7uvo5duIg7d39YSlI
      5/IIIVBa9mMIEvymahqvH2mgoXMo4HXjkhtRWsLtFRaoF2pwP/8nCPcw1o//97h3eprnwcmx
      2Vjv/inK+dfxVv4CoV25fzH+XA7gev4LYI7C+vHHwlb54TICGB0ZJiO3kOhIvQ2YC4SzZ9yx
      FSC+v7Pfwfd+vQ+Hy8uvXjtBXevkl5KcWhxWr7DQVDx7f4Cv5gkst32fiI1fnHY/+4NI5kgs
      O38IQuB545sI31jQezV7B55Xv47SvBfrRx/BvOoBpDDvihc0txG3k9OHG9hw3eqwFqgTmA+u
      +72Iqmm8cug8x89388WPrCMrJYadGwv5ye8Pc9+2ElYVvu8plowRSLFZaINNM+pjX8Rf9yKS
      0YLljh8D4T0BVJINRGz6n/gb3xkf9O/4J+TYrInrwu/GV/3fqN0nidjyVQypJWEt/4MEbAHG
      7P2MuSUKS4v0UIg5QAjtvaWPN0x8dvGtD/CdXTeSlRIDQGyUhb/95Bae31/HsfoLl+RjzAvP
      WmFtpBPl7B8xb/oS4a787yNhKryZiO3fwv3Gt1A6qsZnjBrewvX8nyDHZWO99xezWvkhiAAi
      45LJSLaheeWAoRB2ux2vy0H/0MisGrdYEKPdSCYbkjUOVdN48cA5Hn3lGF/8yDruuWE5BvnS
      nynaZuabn9zCqxUNVJzpnPjcmL0RpaNqZrZoCp53f0TE1m/M6ozSRQxJRdg++gi+Y7/B9fRD
      qBdOYLv3Z5iK70aSZ//1G9QPcKjyCH29Xj7xqY9dMhM0OtxPY2c/ibFRaEIjJztHPyh7hiiV
      P4PUUg7Zs6mu72bb6hzWLk1Hli//TL1+lRf2n0MTggdvLkGWJHxvfgvTpj9H+kCXIiRbKh6B
      2FyMxXdPK/200RTE2ABSdNqcFhvUD5AUG4/PM/kNr6oafrcTNcqKT9V3h54pQlXobjrB440l
      ZKY6+fr95ZhNU3uWRqORh3eU8cL+czz26gn+9KPrMRVsQ7QfxLTm4ZBtUdoOI8b6sWz5GvUd
      g7x9rJmHd5QRGzn7LQEYwTw90c6EoMekCjFGY4OdpUWZV8xE9wRPDyEE71Sd462K0+z6+HaW
      ZSdNO59XKxpo6hriSzsLUN75Lra7fxpaHh4H7pf+gu513+HpIxeItJgpzU9hX00b33xoM9aI
      8IYxLBSCzgJ1dw3S0nCWvKLMK4ZC6ITOwIiLx145RkrfXr7ziTuxTrPyw7i39a7ypeyubuI/
      Xz3PF00qmnsY2Ro/pfRCCJrf/Q3Pdm7EIHr51K1lZKfGAmAxG3nk+Sq+cX85RuO1NyUSVACK
      10VU/DxEFy4CTjX38bu3avnczpVkV/03lsyyGecpSRI7NhRgNhp45I0Cvl56gshlV/a29gw6
      efqdWpwjS/gfD15PQcalfojykmxGxrw8+sox/vTu9Vccl1xtBJW0xWqjr6MD/1xaswjwKyq/
      f/sU3/rkFgrNvciJRWGLkpQkie1rl7D9zk/wr/vGcHuD/3oDIy5+9mI1v3j2HbYO/ZK/e2jL
      pMo/nifs3FhAfIyVJ98+dc2FvQffHr2/iz6finUurVkE7DnazIblmcRFW/Cf342xaEfYy9hc
      ms12+QA/+t1+xty+S67ZRz389x9P8MhzlWxemc3f5FdRuuMzl43SlCSJB7aX4HT5eO1IQ9jt
      nU8C7w06MkjVqSbiZYF7ri26hhl1edlf287tmwoRqh+t9wyG9PB72iXZyIaiZO4q8PDDJw/h
      GPMy6vLy+O5afvz7Q6wqSOV7n9vGCk4jGcwYl2y5Yp6yLPGFu9ZyprWfQ6faw27zfHGZWSAX
      XR1usnKuPA7QZ4GujBDw2zdPUpiZwObSbNSuE/gb3sSy7ZuzUp7SUYXaepCGzId57NXjWCOM
      fHTzMjYVZyHLEpprEM8rX8N6z0+RIqKnnK/Hp/DDJw7ysa0rKCu4/KL9hU7XgCP4IPhC1yCS
      X8NL4iWOMJ/byYUBB+mJUTg8guSE2Dkw9eqnZ2iU1p5hPnXb+IDX3/AmpqW3zVp5hrRSfJU/
      p2RLMt/ddSMxkRETHmUhNLz7foK5/EshVX4YnxX6+v3l/PDJg0TZzOSnT22maaHhV1Qee+V4
      cAF4x0Zo6RrmxoJLFz1IwFBfP4rmw6AJEuOi9TXBU+DJPae4b9sKNFVF0/yofWcxfnjX53Ai
      mSAyBWWwmei4XISmobwXfqw17kaYoyFj/bTKt0UY+PK9G/iP5yr5y09cR0rc1bV7lE9ReXz3
      KdYVpQXbFcJHZcVxEtKyJq0I83g9qD4Pis+Ky6/vDj0V6lr7McgyxXnjXQal4ziG1JUYTbMb
      ai6W3IBoP4wpqWDiM83Zh6/2aaz3/D+kENYdf5j0pBi+dM8G/s8L1Xzzk5uJjZoLb/HM8Csq
      e442s7emlVvW5XPLuvzgs0AGgwG/xztJANFxSWwov47lS4soK142yyZf/aiaxtPvnOaTt5QC
      490P3/HfYi69b9bLNuRsQmk/MvH/QtPw7vsx5uu/jGSOnHH+uWlxPHxrKf/2TMVlp1znG1XV
      ePtYC3//X+/gVzX+6fPb2bGhAFmWgu0KYebOe+8hMmrmD2mxc7C2naLsJFLix5+l2laBHJ2O
      nJA362VL1gRATHiFlXOvIkWnYcxaH7YySpaksNPl4z+fq+QbD5RjMi6cnoAQgnPtA/zmjZOs
      X5bBd3dtmxTSEbAFGGpv4tkXX2L//iO6I2wGeHwKr1c2cu8Ny4HxUGPf0V9i3vjFOSlfkiSM
      2RtROyrRHN34T79ARPmfh72cTcVZrF6axqOvHEPTFsZYsKV7mB89eYi3jjbz95/eyie2FQeM
      Zwo6Ddpcf4b2/lG2btl0xUUxl5sGVQfOI0UmTzku5Vri2XfriIuycOv6fAD8Z19Fs7cTUf6l
      ObNBHWrBV/kLUDyY1++atZ3ahBA8s/cMPkXj4VtL5y08vrPfwdPvnEFVNR64uYTc1MtvwxJ0
      FOT3+fA5XfhhZjtD+Fy49/wFphV3YSq9H0leOE3kbDLocHGysYfv7toGgPB78J96Fuvd/3dO
      7ZDjstH6z2EsuGlWtymUJIn7tpXw2KvH+fXrJynMCu2FJ8R42EVclIVoWwTRNjPRtgjMU+xS
      9Q45eWZvHQ6Xhwe2r6Qwa2pnpwVtAQb6BzADluQrnxJzJUeYUH34jv8OteVdzJv/EmPmuikZ
      d7UihOBnLx3l+pXZrC4cX+DhO/44yEbMqx+cc3vU7pPIycvDsqj9SiiqxoGTbXj9oW2rrAmB
      2+vH51cZdfkYdXlxuH34lffzMRpkoq3m9wQyLpIoq5n6jkH6hpzct72EFbnBd4ILREABCOHj
      1RdeJTYtiy2bN86oC3TJl3T24j3w7yBJRGz52ow3NVqoNF8Y5pm9Z/jbT25GkiSEZwT3y1/B
      +rFH56QSXqsoqsaoyzshkIv/piZEUZqfMq1uV9BZoIKCHBweCZXLRMxNgb7hMZAgOTYSOSoV
      y84foHYdw/PaX2HM345pzcNh3zNyPtE0wVN7TvHpnasmfhDfsd/OaPs+nXGMBpn4aCvx0eEL
      0Qw6BrDabDg8k0PhXKPD1NU1E5MUjcejUVay/LIF9Aw5eau6if4RF3FRFpblJLE8J5eCe/4L
      6p7D9ewuIsq/hDH3+pl/mwXAsfMXSImPJDtlPEREG+1B7TmJeQ4HvjpTJ+gYoO9CO4cPHGPH
      A/deckyS02FnzKfhHnMgNEFubu6UF8WPjHk53zlMffsATReG8CsqebGCwr4XKcxKIHPbF5Fi
      MsL13eYcRdX43q/389cPXk+MbXzk5Nv7fYxLb0XO2jjP1ukEImgLMGbvZ8CvTV4PIDTsQ4Nk
      ZqTi9oW2KD4x1kh5bCTlJeOLnxVVo6XbTn17Hs93DND760MkpGSxLDeJ4txkirKTprsL37zw
      ZvV5NpVkkxAz/spQB5uQ3IOYc8unvZ2gzuwSVAAD9jEyYmx44BIRRMUmsCx2fIopaqaFG2SW
      ZiWwNCuBuyhCiE0MnNrDmX3/wcsVhSSW3MJnb199VSzDG3V5OXiqg+9dnPYUAt+Rn2He9Gd6
      5V/ABBzf2rvaKFhbTmF+3pyeEyxJMsllO7jxT37Clzf4sZ16lH9/5jC+EKfU5hohBM/vO8tH
      ri+a2NJE664BYwSGlBXzbJ3O5QgoAEuUhRMVFbT3DwRvImYRyRKDZdu3+MTDn6ds+EX++Tdv
      4/zQ0r6FRPegk7bekYmundBUvJWPErHpz+bZMp0rEXQQHAqzuSJM+F0c3/syz9Zb+MZDN5Gc
      EDMr5UwXIQT/+nQFd29ZxtKs8dVzSvO7KB1VWG78m3m2TudKLPiNXiSTjXW3PsAX71rNj3+7
      h+Yzx8b95guEutZ+TEbDROUXqh/fsd9g3vCFebZMZyoseAEAIEnkL8njbz57G794u51jLz6C
      5hqcb6vei/U/wydvWTnxmXL2VQy5mwPu86+z8Lg6BPAeyXGR/P0X7uTlgRW8/di38de/MW+t
      wfCom588dZj1yzNIjhuP9Rd+F766P8xLvI/O9Ah5DOAZc9A75MQs+RnxaCwvXDLnu0L4/CqP
      PFdBduczfLTYRMT2v0OeozNyhRAcqG3njxUNfGbnKorzkt+36+gvISIWc+nH58QWnZkzrUFw
      T3c3flUFIcjMzJyX7dE1Ifjtm6dQu47xUMy7GFc9iLFo56yWaXd6+K8/1pAUa+PBm0uI+MAu
      zsJjx/faN4i45xcQ5mN8dGaPkAXgGh2mqbWTlJRk3H5BXlb6vO0LJITgpUP1NLZ28T/TKjF6
      B4nY9nchHzM6lXKCvfXfuwPvgX9HTl+F6UPHHOksbBb8NOiVuFg53znewldviMB84lEQGlJU
      CnJcLnJ83nunh+ciWUKfQh0edfPoK8dJirXx0K2lWMyT3+7aSBeet/8R670/Q5KuqmHVoueq
      F8BFapt6eWrPKb7+QDlJsTbEWB/acBvacOv4v/Y28I6CZECOzUSKyx0XRnweclw2kvHSbT2E
      EOw/2c5rR4K99d+/z7vnOxhX3I0x69pe6HMtcs10VssKUomJjODHTx0mIdrKspxEluUsoXD5
      2kve2kJTEI6u98TRhr/9CJq9A1QPGC3IcTk4Yor51blEEg1OvrfrFiwRweP4tYHzCK8TY1b4
      zq7VmTuumRbgIkII7E4P9R2D1LcP0tQ1hKJq5KXHsTwniWXZiaTERwYctAu/m3f3HeT10yN8
      aq2ZQncVwtEFQkWKiEWaaDHGWw8pMgnPq1/HXP7nYTmaVGfuueYEEAhF1WjtsVPfPkB9+yC9
      w2PERUWw7D1BFGYmMOb189grx0iOjeShW0uJ+GBfXwiE1zHRlZroVjl7MaSuxLLtb+fvy+nM
      iGkLoLuzbd78ADNFCMGI00t9xwDn3mslPD6Fz96+OmhfX+faZNoC6OjsBCHIzs6+6gSgo3OR
      ac/ZRVmMqNI1M4bWWaTMeAygaRqqqiJP41RvIcS0PMhXS7rpcLV8t6vhWU6FGb/CL1b86QhA
      07QFn04IgRBiztJdDc9krtPN5m8QFrdlsAKEUGk4e4Yxb+BDGIKl87pGudDTH3J5g33dNLd1
      hpxuoPcCLe1dAa9JkhQ0ndsxRM+QI+R0bc0NDAwHThf0WWoqTQ3ncftCe5aOoX7OnD6DL8iq
      0mDpnCOD1Dc0owbpHwRL19PVTlfvQOBEQdI57AMMDI/S09VGd9/QpOvBnmX3hXbcbi+tre2T
      tvEPlk6oCi1t7fhco5yrPz+74dCasw9bWiHDA30hpYuwRSOJ0E8uiYmJxTiN7bltNhvOsbGQ
      0gih0TswhM/tDLE0jbExF6oa6CcLjtfRy6DTj88f2nOJSUgiOjYGc4iPxTnqxO10BhVAMDwe
      D73d3SGliYmLxe/xoggDinfqv0N0TBR+P0RGmAIKIBCSwYjFbMZkjSQ60jK7ApBt8Qx1nMMa
      dfkdej+M22nnQnc3Hn9olaS9vQ1FCX0B/ejoKAZDiI9CaKh+H06XN8R0EBkVidcbWjpTZDwx
      ZvD5QtuwXvF5iAzx+QMYjAbMZhkttJ+AqKhI4uJC2xh3eKCf3r5+fN4x1BC2YRjo6aF/oJ+e
      3m6GgrSoH0ZT/fT2dNHW0sSg3RUeR5iOztWKHrqos6jRBaCzqNEFoLOo0QWgs6jRBaCzqJnw
      BAshOHe6hp7+YVIys1BGHQw6RsnJX0pylIH6li7Ss/LITk/kRHUFijCQU1hMakL0RGZn6k5R
      UlwatLCupvN0DjswmW2sLSu+5JriHcMjIpBHO+gWKRSkTD6itaPlPI0tncTGJZObm0Z0fDLm
      ECRcd/IYEfHpFOSkc7zyMKpkIq+oZGJbk8kI2hrr6R0aIadgBbgGaLswQHHZGoa6miY+d/a3
      M+wYI7tgBWmJC2vnOp3LM1F9JEliRelqrNYISpYVsWrdOiKsVgpyMzlWe46NG9aTnZ4EgN3p
      Zv2GjZw+XoXfPUJlZSVtXX04HA6E8HGiupqaM/W0NTXhF9DS0gLAhdYulq9fj2egl47OFuwe
      lfbWFlQBzbWHeW1vBcN2OzU1NVQdP4WmeDhaVUlD67h3N3tJEVZrBGvXluJ1eZGElyOHDlFR
      UcHxY0dpau+mp6OFqsoqnJ5xh1Fb0zmqqqoZGbFz6GgN41EoghGXl/Ub1lN7rBLncD9Hjx6l
      paObxqYmhNBoaW0DIDkjh3WrS6g7fZr6pi42rC3hxPGa8c9XFVN3+iwFy0ooyE2juaV97n45
      nbAwpfdnoJMdJUnCYJSpOHAADAaOVFaOX9AEqhCcrD1JUqyB6pp62jveCzMQPmqqqxgY85Kc
      mEBN9XFa2jowSJCekcGykjJibGYKlpXg9zo5XXmIEUWm6siRSeVf6OzEr3mRI6JR3W5K1q6h
      r6OVw4crkISPiuoTCNVPe6+d9WtKOHWumfz8fPJzMj7wHWQMBglNU9EE1NTW4hrooqWlgWG3
      BEi47b28ta+aTZvWYTSakY0RGISGa7iHt/Yfpbx8Pc7hfs43d2Kz6kcgXW1cUQCSBDEWqKo+
      Skf3eIyHfaCH6uoqLNGJZOXkIFTBqrLxrs9YfxvdI36MRiORibkMnjtARtGqD+QnYxRefIYY
      pLE2opLzADBZo2mtO8Go2zceLShBWmY2RkmjbFXZ5SwcN1KSkJDIyspEMlpZuWIpyAY0t4Pq
      o8dJTE69JNVQXzfVVZXYYpNpbGxANhgwGGRK1qzl9df3Ubo8B4TG67vfITkhhr6BYYy4qDh8
      mPi0dN54a+/45319tHV0YjSa8Pv1Y8WvNmbVE+x2DPFu5Uluv3X7pGuq18kbbx9mx+07MC2c
      6Fh62htp7h3j+g2zd6auzsJBD4XQWdTo06A6ixpdADqLGl0AOosaXQA61wwe54AErEkAAA+w
      SURBVDAv/eFF2jq78ClTW8igD4J1rimOHKog3qZR1+NCdQ4hK4K2viEe2vU5UmIsk+7X9zXR
      uabIys7CYhIUx0lEGgU+l4v0IQeREYFXms2oBbiYdCFtc6GjEwozHgNooS4a1dFZQOiDYJ1F
      jS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FjS4AnUWNLgCdRY0uAJ1FzZQFIITgVMW7
      nG/v5MSx47hD34Vc5xpHCIHbe3VtDDDlaFCPox+7S8E4PMqS5Di8qsCMhqZp6BHVOgBH6y/w
      6Csn+Ncv3Uq0zTzf5kyJkKJBFa8HYTTS1ztAZkYaQgg0TdOPSNXB6fbx/cf3s2NDAWda+vnz
      ezcs2Cjh1m47ffYx0hKigneBAunCGGHBZDCSmZE2qwbqXF0IIXh8dy33bFnOttV5COD4+dCO
      SZornG4fP3/5KK09dv5Y0RBcAL0dLTz1xLOEeACQziLkZGMvXp/CxhWZSJLEZ25bxXP7zuJ0
      ++bbtEsQQvC73bXcvWU5928v4c/uWR9cACMOB1n5eVwdPTmd+cLl8fP03jN89vbVE12emMgI
      Prp5Gb/bXctCGh7WNvXi8SlsKs6c+CyoAFRFYbCzG8+cmKZzNSKE4Mk9p7hz01Lioi5db7up
      OBO3T6G2qXeerLsUl8fP0++c4TM7V10yNgkqAMlsY1VJ0ZwYp3N1cqa1H7vTw+bS7EnXJEni
      sztX8fQ7p3HN89SoEIKn3j7F7dcVEh9tveRaUAFkpyfR0Tuoe8p0AuL2+nlyzyl23bEm6GxP
      fLSVndcV8tSe03Ns3aXUtfYzPOphc1nOpGsB67d7qJuq2jpciqZvG6EzCSEEz+w9w63r8kmM
      sV723i2lOQyNuqlr7Z8j6y7F41PGhXr7auQAQg0sgNExMjLyyExL4Ory6+nMBfUdg3QPOrlx
      Td4V75VliV23r+aJt07h8YV2yn04eGbvGW5el09irC3g9YACsERH0tHZQbw1cspH0OssDrx+
      hcffrOXzd64J+EYNRFKsjZvXLeGZvWdm2bpLqe8Y5MLAKNtW5wW9J6AA/G4PK1YWc+RQJXrI
      j84Hef7ds9y4Ovcy56oFZtvqPC4MjHK+Y3CWLLsUIQRPv3Oaz92xBlkOLtSAAhBAfV0d0SlJ
      uh9AZ4KmriFaeuzcsm5JyGllWWLXHWv47Zsn8fln/7V6sqmX8pJsUuIvL9SAArDFxaL5vJit
      VvQon4XBeNzVNP4LkyfKp6j8+o2T771Rpzc3mBofyQ1lOTy//2xYbAqGy+PnmXfOUF6SdcV7
      A07yDHe04ZMNKAMjOIG4cFuoExIen8K3H3sbmyX09njU5aWsIJWPbV0xyVkVCi8dOMem4kzS
      E6OmnQfALevz+eHvDtJ8YZj8jPgZ5RWIi8652zctJcp65ecVUAAphSvYkuWn+XQjgcfOOnPJ
      7uombl6Xzx2bloacVgjBsfpu/uX3h1malcA9NywnNjI0IbT22DnbPsC3H74h5PI/jEGW2XXH
      Gn7+8lH+4dNbMRnD28eou4xzLhAB2zLJaMGojTHi9k/cIDSFlqZm/Iqfzq6ecNmrcwXGPD4q
      znRyy7r8aaWXJIn1yzP4x89vZ3lOMj968hCP765l1DW1MEdF1fjVazV87o41GAzhcYtmJEWz
      cXkmLx+qD0t+F/H4FJ7Yc4pddwSe8w9E0PUAx6r3UX2wgV1f+wIRgFD9NDedZ8QlkZFgwZK2
      hGjD+IKYhRr3fS3w3L5zJMVa2bY6Nyz5CQFH6jp5taKBVYVp3LmpkEiLKej9rxxuQNM07t6y
      LCzlX0TVBD944hCf3bmKrOTosOT5u7dOk5UUxbYp+CcuErALJISKplhYva6Yi+pQFT8+nwLI
      dPePsDxTmhgM6QtiZocRp4dTzX1873PbMIbp7Qtww6o8Npfmcvh0Bz944hBrlqZx1/VFRH5o
      jNHZ76CmqZd/+PTWsJYP4xXv83eu4ZevneDbn5p5/vXtA/QMOfn0basuO+0ZyI6ACMXNiFee
      uMEYYWPFykvPzl1Ioa7XIi8erOcj1xeFvfLB+LTklrIcyldmcbC2g3/6zX7WLcvgzvKl2CJM
      KKrGL187wa7bV89K+QDZKbGU5qfy2pEGPrp5+i2M16/w+O5avvLx60Kq/BBsDCAZMFgkWk6f
      1x1h80S/3UXzhWE2rsi88s0zwCDL3Lg6l+9/4SaSYqx871f7eGH/WV46eI4VOUnkpc3uHOBH
      ri/iWH03XQOOaefx/L6z3FCWe8U5/0AEbAFcI4PYHQq5y5fo0aDzgBCCF/bXce/W5SG/0aaL
      wSCzfe0SbliVy7snWjnZ1MtXPr5x1ss1GQ3sumM1//HMEUxGA7FRFlLjI0mJj5z4NyUukghz
      4M5KU9cQLd12HripJOSytdHe4IPg86draGzt5ea7biMiSAb6ovjZoWtglF+9doJvf+qGRTXB
      IITA7vTQNzxG7/AYfRf/s4/h9atIEiREWyfEkRQXyYv7z/KlezeQnjjVgbRAG+nEd+IJtMHG
      4AIQ2ijNTWMULA2+AF4XQPgRQvDI85XctrGQ5TlJ823OgkLTBMOj7glx9A6PkZsWy6biy3t8
      tbF+1M5q1I7q8UofmYxp5ccw5G4OPgju6+rn2InjmKJuJCc9OexfRicwrT12vD6VZdl65f8w
      siyRGGsjMdZGcV7wOin8btQLNSjNe9H6ziLZEjBkbcC06kHkpEIk6f2OfVABjI4Mk5FbSHRk
      sA6QTrgRQvDs3jru317CIur5zBiheFG7T6J2VKF214AAQ8ZqTMV3I9/4t0hy8B5KUAGMuJ2c
      PtzAhutWz4rROpOpbx8kwmwkL12PvroSQgjUlv34ap4ATcGQVoYheyPmDZ9HMl1+ldoHCSiA
      MXs/Y26JwtIifRZojtA0wXP76vj8nWvm25QFjzbWj3f/vyCZbFh2/hDZljDtvAIKIDIumYzk
      NpqbPahAcEe5TriobeolOS4yhNmM+UMoPsRoN5qjC22kC+HoQnN0Icb6EV4n5g2fx7h0x2W7
      HtMqV2j4z/wB5cxLmDd/BWPW+hnnGdQP0NLRS/+QF70rOvt4fAov7D/LXz94/XybAoBwD6O0
      HECzt49XbNcQclQKUmQySDIYzMgx6UiRKcjxeUhJS5FiMpAik8DrROmswrPnu0jmSMzrdyFH
      pc7MHqGhnH0FpXkfxqKdWD/+GJIxPGPTgAKwxSaSFBuPzzMSlkJ0Ls8blY1sLs0m2jZ/Ew5C
      U1HbDuOvewnhGcFYsB1D9nWYYjORolKn/ja3xGAqvAVjwc2o7RV43vg2ctJSzBs+hxwZ+myi
      NtyGZ9+PMSQXYbntn5FM01/TEIjgfgAxRmODnaVFwV3xuh9g5jjdPv758QN873Pbwh4bf0WE
      QLO34a97CaWjCmP2xvGZk/i8MBYhUFsP4jv2K+SU4vEWwZZ45XSqH9/x36K2VxCx9a8xJIc3
      GvUiQQVwobOd0yfPsv3O24KOAXQBzJyn3j5FZlIMW1eFJ9x5KgjfGErDbvznXkOyxGIquQdD
      TnnY++yXlCm08VmbY7/BkF6Gad1nka2BV4Sp3bV4D/4bxqU7MJU9MKt2BZ0GVbwuouKvrFSd
      6TM86uZMSz/3bws9jiVUhNBQL5xAOfMimr0D49IdWO/4CZJ1bqZcJUnGmL8Nw5KtKE178bzy
      VQyZ6zGv+zSSJXbcRp8T7+GfIkZ7sNz2A+SY9Fm3K6gALFYbfR1n8bMeE+POhvONzZjNFhyj
      LkrKSvQF8zNACHjxwDk+unnZlVdaCYHwu0ALfWMp4bbjb9iN2rwPOXUlptUPjXcn5snTJkky
      psKbMeZvR2ncg/vlr2DIvg45Lgffyd9jXvtpjEtvnbMYqOCOsP4u+nwqEy4Fg4moSBtuBZam
      x2D3CuJN+hFJ06Xf7qK1x87Dt5aiKAr4XWgj700nOroQjgvg7AbPCCDAZJvezIfRgrxkO+Z7
      HwODCQEo6sIIcpfyb8K8ZBtq41uoA/WYP/J/kCKiUefQvqDToFWnmoiXI3ADNkB4nQw53GSk
      JtI66GBFigRCXxEWKmpvHWpPLc8fN3IXh/H/4dfjF0w25JhM5NgMpJhM5Kx1SLGZyJa4eXtb
      zxXGFXcCd85L2ZeZBXLR1eEmKyf4OEAfBIeG8I7i+sOf0pd1N082xPOt+9cg2RIXVcjzQiNo
      5/NC1yCS36kfkRRG/Keew7TyE7x4IZv7blmLHJmkV/55JqgAvGMjnGtr1we6YUL4xlCa36Uj
      phxVExRl6zNsC4HAe4MKH5UVx1F8fn136DDhP/08huV38cz+Bu7fPvvTnjpTI2gLYDAY8Hu8
      ugDCgPC5UBr3UGfaQFyUlZzU2Pk2Sec9gg6Cx5xjREZdfpW9PgieGr4TT6AIme8fT+WvHiif
      dE6VzvwRsAUYam/i2RdfYv/+I/oJMTNE+N0oDW9ywFPG2qVpeuVfYAQUQEJOAVs3rEKT0QfB
      M8Rf9xLe7Jt491Q3d5brp24uNIKOAfw+Hz6nS28BZoBQPCj1r/Hq0Aru2LQUS5C9bXTmj6C/
      SGJaNulp2fqCmBngr3uFwcRyGtvcPHT75CM6deafoNOgFfv3U3O+edrHpKpDLXj2/gC17yyw
      +GKFhOLFf/YVnutZxv+4uWTOdnjTCY2A9VuSzBQU5ODwSKhcpp90GeT4PExFt+GveQrvcCvG
      oh2Ylt+JFCQG/FpDOfdHmkxlCMnKilx9X6WFStAXvNVmw+FxTztjSZIwZK7FkLl2fB68YTfu
      1/4GKSJ6fAFG7uZZXegwnwjVh/f0izw/8gB/dl/pfJujcxmCCiAyKoqeE/X4N62b8a4QktmG
      qeQeTMV3o4104D/zIt4jP8eYvQFT8T3ICaGfOriQUepfp8q1hIK8LNISZnamls7sErR3M2bv
      Z8CvTawHEEIwPGxHaMr0j0iSJOS4HCI2fwXbA49jyNqIt+L/4Xru8/hOP4/wjU0v3wWEUP04
      a55n99gaPrZ1xXybo3MFgrYAA/YxMmJseGBcBEJhaHgEt3MEo1Cx+8TEEUmBnMkOl4/Ks11X
      KD4Fkr6I8DjwH34D8cbbSAW3UpplI8tsD+2bqF7k7HKIn9/WRD3/Bm/2pLK1vBiLSR5f7KKz
      YAkoAHtXGwVry4ltbHzfEaZp9PVeIDk5idER5xWPSDKbNKKsU1zBZE2GTZ8CwOdX+PmBEzxU
      7Kc4d+obxAq/C9++H2LI2YR53WeRDHO/nZdQ/fQefZ5ay8f5x42Fs3ayik74CBgL5Bnp5dDx
      egQSN22/IWg/abZigRxjXv7l94fZeV0h16+c2nGXML63jb/2GZTzrxNxw19hSC8Lq11Xwl//
      Br947l3K7/tL1hXN/oJunZnz/wHgQJ1GeIuHWgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By the Time of Day 2022' width='192'>
      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
      MpIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TTC Delay By the Time of Day 2023' width='192'>
      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
      E+WGH7P/D+Ff81+TLVi+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TTC Delays 2022' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TTC Delays 2023' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
